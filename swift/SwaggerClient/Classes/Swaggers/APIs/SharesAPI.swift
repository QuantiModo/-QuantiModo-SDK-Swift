//
// SharesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class SharesAPI: APIBase {
    /**
     * enum for parameter platform
     */
    public enum Platform_deleteShare: String { 
        case Chrome = "chrome"
        case Android = "android"
        case Ios = "ios"
        case Web = "web"
    }

    /**
     Delete share
     
     - parameter clientIdToRevoke: (query) Client id of the individual, study, or app that the user wishes to no longer have access to their data 
     - parameter reason: (query) Ex: I hate you! (optional)
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteShare(clientIdToRevoke clientIdToRevoke: String, reason: String? = nil, platform: Platform_deleteShare? = nil, completion: ((data: User?, error: ErrorType?) -> Void)) {
        deleteShareWithRequestBuilder(clientIdToRevoke: clientIdToRevoke, reason: reason, platform: platform).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete share
     - POST /v3/shares/delete
     - Remove access to user data for a given client_id associated with a given individual, app, or study
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - OAuth:
       - type: oauth2
       - name: quantimodo_oauth2
     - examples: [{contentType=application/json, example={
  "clientUserId" : "clientUserId",
  "lastName" : "lastName",
  "subscriptionProvider" : "subscriptionProvider",
  "hasAndroidApp" : true,
  "latestReminderTime" : "latestReminderTime",
  "combineNotifications" : true,
  "displayName" : "displayName",
  "roles" : "roles",
  "timeZoneOffset" : 1,
  "earliestReminderTime" : "earliestReminderTime",
  "sendPredictorEmails" : true,
  "createdAt" : "createdAt",
  "administrator" : true,
  "authorizedClients" : {
    "studies" : [ null, null ],
    "individuals" : [ null, null ],
    "apps" : [ null, null ]
  },
  "password" : "password",
  "stripeActive" : true,
  "smsNotificationsEnabled" : true,
  "loginName" : "loginName",
  "stripeSubscription" : "stripeSubscription",
  "id" : 6,
  "email" : "email",
  "stripePlan" : "stripePlan",
  "userUrl" : "userUrl",
  "updatedAt" : "updatedAt",
  "hasIosApp" : true,
  "lastFour" : "lastFour",
  "shareAllData" : true,
  "capabilities" : "capabilities",
  "clientId" : "clientId",
  "accessTokenExpiresAtMilliseconds" : 0,
  "getPreviewBuilds" : true,
  "avatar" : "avatar",
  "accessToken" : "accessToken",
  "trackLocation" : true,
  "userRegistered" : "userRegistered",
  "firstName" : "firstName",
  "phoneNumber" : "phoneNumber",
  "avatarImage" : "avatarImage",
  "sendReminderNotificationEmails" : true,
  "stripeId" : "stripeId",
  "subscriptionEndsAt" : "subscriptionEndsAt",
  "accessTokenExpires" : "accessTokenExpires",
  "pushNotificationsEnabled" : true,
  "lastSmsTrackingReminderNotificationId" : "lastSmsTrackingReminderNotificationId",
  "phoneVerificationCode" : "phoneVerificationCode",
  "hasChromeExtension" : true,
  "refreshToken" : "refreshToken"
}}]
     
     - parameter clientIdToRevoke: (query) Client id of the individual, study, or app that the user wishes to no longer have access to their data 
     - parameter reason: (query) Ex: I hate you! (optional)
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)

     - returns: RequestBuilder<User> 
     */
    public class func deleteShareWithRequestBuilder(clientIdToRevoke clientIdToRevoke: String, reason: String? = nil, platform: Platform_deleteShare? = nil) -> RequestBuilder<User> {
        let path = "/v3/shares/delete"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "clientIdToRevoke": clientIdToRevoke,
            "reason": reason,
            "platform": platform?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter platform
     */
    public enum Platform_getShares: String { 
        case Chrome = "chrome"
        case Android = "android"
        case Ios = "ios"
        case Web = "web"
    }

    /**
     Get Authorized Apps, Studies, and Individuals
     
     - parameter userId: (query) User&#39;s id (optional)
     - parameter createdAt: (query) When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local. (optional)
     - parameter updatedAt: (query) When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local. (optional)
     - parameter clientId: (query) Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do (optional)
     - parameter appVersion: (query) Ex: 2.1.1.0 (optional)
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)
     - parameter log: (query) Username or email (optional)
     - parameter pwd: (query) User password (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getShares(userId userId: Double? = nil, createdAt: String? = nil, updatedAt: String? = nil, clientId: String? = nil, appVersion: String? = nil, platform: Platform_getShares? = nil, log: String? = nil, pwd: String? = nil, completion: ((data: GetSharesResponse?, error: ErrorType?) -> Void)) {
        getSharesWithRequestBuilder(userId: userId, createdAt: createdAt, updatedAt: updatedAt, clientId: clientId, appVersion: appVersion, platform: platform, log: log, pwd: pwd).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Authorized Apps, Studies, and Individuals
     - GET /v3/shares
     - This is a list of individuals, apps, or studies with access to your measurements.
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - OAuth:
       - type: oauth2
       - name: quantimodo_oauth2
     - examples: [{contentType=application/json, example={
  "summary" : "summary",
  "authorizedClients" : {
    "studies" : [ null, null ],
    "individuals" : [ null, null ],
    "apps" : [ null, null ]
  },
  "description" : "description"
}}]
     
     - parameter userId: (query) User&#39;s id (optional)
     - parameter createdAt: (query) When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local. (optional)
     - parameter updatedAt: (query) When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local. (optional)
     - parameter clientId: (query) Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do (optional)
     - parameter appVersion: (query) Ex: 2.1.1.0 (optional)
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)
     - parameter log: (query) Username or email (optional)
     - parameter pwd: (query) User password (optional)

     - returns: RequestBuilder<GetSharesResponse> 
     */
    public class func getSharesWithRequestBuilder(userId userId: Double? = nil, createdAt: String? = nil, updatedAt: String? = nil, clientId: String? = nil, appVersion: String? = nil, platform: Platform_getShares? = nil, log: String? = nil, pwd: String? = nil) -> RequestBuilder<GetSharesResponse> {
        let path = "/v3/shares"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "userId": userId,
            "createdAt": createdAt,
            "updatedAt": updatedAt,
            "clientId": clientId,
            "appVersion": appVersion,
            "platform": platform?.rawValue,
            "log": log,
            "pwd": pwd
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetSharesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter platform
     */
    public enum Platform_inviteShare: String { 
        case Chrome = "chrome"
        case Android = "android"
        case Ios = "ios"
        case Web = "web"
    }

    /**
     Delete share
     
     - parameter body: (body) Details about person to share with 
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)
     - parameter clientId: (query) Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func inviteShare(body body: ShareInvitationBody, platform: Platform_inviteShare? = nil, clientId: String? = nil, completion: ((data: User?, error: ErrorType?) -> Void)) {
        inviteShareWithRequestBuilder(body: body, platform: platform, clientId: clientId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete share
     - POST /v3/shares/invite
     - Invite someone to view your measurements
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - OAuth:
       - type: oauth2
       - name: quantimodo_oauth2
     - examples: [{contentType=application/json, example={
  "clientUserId" : "clientUserId",
  "lastName" : "lastName",
  "subscriptionProvider" : "subscriptionProvider",
  "hasAndroidApp" : true,
  "latestReminderTime" : "latestReminderTime",
  "combineNotifications" : true,
  "displayName" : "displayName",
  "roles" : "roles",
  "timeZoneOffset" : 1,
  "earliestReminderTime" : "earliestReminderTime",
  "sendPredictorEmails" : true,
  "createdAt" : "createdAt",
  "administrator" : true,
  "authorizedClients" : {
    "studies" : [ null, null ],
    "individuals" : [ null, null ],
    "apps" : [ null, null ]
  },
  "password" : "password",
  "stripeActive" : true,
  "smsNotificationsEnabled" : true,
  "loginName" : "loginName",
  "stripeSubscription" : "stripeSubscription",
  "id" : 6,
  "email" : "email",
  "stripePlan" : "stripePlan",
  "userUrl" : "userUrl",
  "updatedAt" : "updatedAt",
  "hasIosApp" : true,
  "lastFour" : "lastFour",
  "shareAllData" : true,
  "capabilities" : "capabilities",
  "clientId" : "clientId",
  "accessTokenExpiresAtMilliseconds" : 0,
  "getPreviewBuilds" : true,
  "avatar" : "avatar",
  "accessToken" : "accessToken",
  "trackLocation" : true,
  "userRegistered" : "userRegistered",
  "firstName" : "firstName",
  "phoneNumber" : "phoneNumber",
  "avatarImage" : "avatarImage",
  "sendReminderNotificationEmails" : true,
  "stripeId" : "stripeId",
  "subscriptionEndsAt" : "subscriptionEndsAt",
  "accessTokenExpires" : "accessTokenExpires",
  "pushNotificationsEnabled" : true,
  "lastSmsTrackingReminderNotificationId" : "lastSmsTrackingReminderNotificationId",
  "phoneVerificationCode" : "phoneVerificationCode",
  "hasChromeExtension" : true,
  "refreshToken" : "refreshToken"
}}]
     
     - parameter body: (body) Details about person to share with 
     - parameter platform: (query) Ex: chrome, android, ios, web (optional)
     - parameter clientId: (query) Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do (optional)

     - returns: RequestBuilder<User> 
     */
    public class func inviteShareWithRequestBuilder(body body: ShareInvitationBody, platform: Platform_inviteShare? = nil, clientId: String? = nil) -> RequestBuilder<User> {
        let path = "/v3/shares/invite"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
