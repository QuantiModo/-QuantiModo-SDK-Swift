//
// Correlation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class Correlation: JSONEncodable {
    /**  */
    public var averageDailyLowCause: Double?
    /**  */
    public var averageDailyHighCause: Double?
    /**  */
    public var averageEffect: Double?
    /**  */
    public var averageEffectFollowingHighCause: Double?
    /**  */
    public var averageEffectFollowingLowCause: Double?
    /**  */
    public var averageEffectFollowingHighCauseExplanation: String?
    /**  */
    public var averageEffectFollowingLowCauseExplanation: String?
    /** Average Vote */
    public var averageVote: Double?
    /**  */
    public var causalityFactor: Double?
    /** Variable name of the cause variable for which the user desires correlations. */
    public var cause: String?
    /** Variable category of the cause variable. */
    public var causeVariableCategoryName: String?
    /** Number of changes in the predictor variable (a.k.a the number of experiments) */
    public var causeChanges: Int32?
    /** The way cause measurements are aggregated */
    public var causeVariableCombinationOperation: String?
    /**  */
    public var causeVariableImageUrl: String?
    /** For use in Ionic apps */
    public var causeVariableIonIcon: String?
    /** Unit of the predictor variable */
    public var causeUnit: String?
    /** Unit Id of the predictor variable */
    public var causeVariableDefaultUnitId: Int32?
    /**  */
    public var causeVariableId: Int32?
    /** Variable name of the cause variable for which the user desires correlations. */
    public var causeVariableName: String?
    /** Pearson correlation coefficient between cause and effect measurements */
    public var correlationCoefficient: Double?
    /** When the record was first created. Use UTC ISO 8601 \&quot;YYYY-MM-DDThh:mm:ss\&quot;  datetime format */
    public var createdAt: NSDate?
    /** How the data was analyzed */
    public var dataAnalysis: String?
    /** How the data was obtained */
    public var dataSources: String?
    /** The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay. */
    public var durationOfAction: Double?
    /** Variable name of the effect variable for which the user desires correlations. */
    public var effect: String?
    /** Variable category of the effect variable. */
    public var effectVariableCategoryName: String?
    /**  */
    public var effectVariableImageUrl: String?
    /** For use in Ionic apps */
    public var effectVariableIonIcon: String?
    /** Magnitude of the effects of a cause indicating whether it&#39;s practically meaningful. */
    public var effectSize: String?
    /** Magnitude of the effects of a cause indicating whether it&#39;s practically meaningful. */
    public var effectVariableId: String?
    /** Variable name of the effect variable for which the user desires correlations. */
    public var effectVariableName: String?
    /** Illustrates the strength of the relationship */
    public var gaugeImage: String?
    /** Large image for Facebook */
    public var imageUrl: String?
    /** Number of points that went into the correlation calculation */
    public var numberOfPairs: Double?
    /** The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”. For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes. */
    public var onsetDelay: Double?
    /** Optimal Pearson Product */
    public var optimalPearsonProduct: Double?
    /** original name of the cause. */
    public var outcomeDataSources: String?
    /** HIGHER Remeron predicts HIGHER Overall Mood */
    public var predictorExplanation: String?
    /** Mike Sinn */
    public var principalInvestigator: String?
    /** Value representing the significance of the relationship as a function of crowdsourced insights, predictive strength, data quantity, and data quality */
    public var qmScore: Double?
    /** Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation. */
    public var reverseCorrelation: Double?
    /** Using a two-tailed t-test with alpha &#x3D; 0.05, it was determined that the change... */
    public var significanceExplanation: String?
    /** A function of the effect size and sample size */
    public var statisticalSignificance: String?
    /** weak, moderate, strong */
    public var strengthLevel: String?
    /** These data suggest with a high degree of confidence... */
    public var studyAbstract: String?
    /** In order to reduce suffering through the advancement of human knowledge... */
    public var studyBackground: String?
    /** This study is based on data donated by one QuantiModo user... */
    public var studyDesign: String?
    /** As with any human experiment, it was impossible to control for all potentially confounding variables... */
    public var studyLimitations: String?
    /** Url for the interactive study within the web app */
    public var studyLinkDynamic: String?
    /** Url for sharing the study on Facebook */
    public var studyLinkFacebook: String?
    /** Url for sharing the study on Google+ */
    public var studyLinkGoogle: String?
    /** Url for sharing the study on Twitter */
    public var studyLinkTwitter: String?
    /** Url for sharing the statically rendered study on social media */
    public var studyLinkStatic: String?
    /** The objective of this study is to determine... */
    public var studyObjective: String?
    /** This analysis suggests that... */
    public var studyResults: String?
    /** N1 Study HIGHER Remeron predicts HIGHER Overall Mood */
    public var studyTitle: String?
    /** Time at which correlation was calculated */
    public var timestamp: Double?
    /** When the record in the database was last updated. Use UTC ISO 8601 \&quot;YYYY-MM-DDThh:mm:ss\&quot;  datetime format. Time zone should be UTC and not local. */
    public var updatedAt: NSDate?
    /** User Vote */
    public var userVote: Double?
    /** cause value that predicts an above average effect value (in default unit for cause variable) */
    public var valuePredictingHighOutcome: Double?
    /** Overall Mood, on average, 34% HIGHER after around 3.98mg Remeron */
    public var valuePredictingHighOutcomeExplanation: String?
    /** cause value that predicts a below average effect value (in default unit for cause variable) */
    public var valuePredictingLowOutcome: Double?
    /** Overall Mood, on average, 4% LOWER after around 0mg Remeron */
    public var valuePredictingLowOutcomeExplanation: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["averageDailyLowCause"] = self.averageDailyLowCause
        nillableDictionary["averageDailyHighCause"] = self.averageDailyHighCause
        nillableDictionary["averageEffect"] = self.averageEffect
        nillableDictionary["averageEffectFollowingHighCause"] = self.averageEffectFollowingHighCause
        nillableDictionary["averageEffectFollowingLowCause"] = self.averageEffectFollowingLowCause
        nillableDictionary["averageEffectFollowingHighCauseExplanation"] = self.averageEffectFollowingHighCauseExplanation
        nillableDictionary["averageEffectFollowingLowCauseExplanation"] = self.averageEffectFollowingLowCauseExplanation
        nillableDictionary["averageVote"] = self.averageVote
        nillableDictionary["causalityFactor"] = self.causalityFactor
        nillableDictionary["cause"] = self.cause
        nillableDictionary["causeVariableCategoryName"] = self.causeVariableCategoryName
        nillableDictionary["causeChanges"] = self.causeChanges?.encodeToJSON()
        nillableDictionary["causeVariableCombinationOperation"] = self.causeVariableCombinationOperation
        nillableDictionary["causeVariableImageUrl"] = self.causeVariableImageUrl
        nillableDictionary["causeVariableIonIcon"] = self.causeVariableIonIcon
        nillableDictionary["causeUnit"] = self.causeUnit
        nillableDictionary["causeVariableDefaultUnitId"] = self.causeVariableDefaultUnitId?.encodeToJSON()
        nillableDictionary["causeVariableId"] = self.causeVariableId?.encodeToJSON()
        nillableDictionary["causeVariableName"] = self.causeVariableName
        nillableDictionary["correlationCoefficient"] = self.correlationCoefficient
        nillableDictionary["createdAt"] = self.createdAt?.encodeToJSON()
        nillableDictionary["dataAnalysis"] = self.dataAnalysis
        nillableDictionary["dataSources"] = self.dataSources
        nillableDictionary["durationOfAction"] = self.durationOfAction
        nillableDictionary["effect"] = self.effect
        nillableDictionary["effectVariableCategoryName"] = self.effectVariableCategoryName
        nillableDictionary["effectVariableImageUrl"] = self.effectVariableImageUrl
        nillableDictionary["effectVariableIonIcon"] = self.effectVariableIonIcon
        nillableDictionary["effectSize"] = self.effectSize
        nillableDictionary["effectVariableId"] = self.effectVariableId
        nillableDictionary["effectVariableName"] = self.effectVariableName
        nillableDictionary["gaugeImage"] = self.gaugeImage
        nillableDictionary["imageUrl"] = self.imageUrl
        nillableDictionary["numberOfPairs"] = self.numberOfPairs
        nillableDictionary["onsetDelay"] = self.onsetDelay
        nillableDictionary["optimalPearsonProduct"] = self.optimalPearsonProduct
        nillableDictionary["outcomeDataSources"] = self.outcomeDataSources
        nillableDictionary["predictorExplanation"] = self.predictorExplanation
        nillableDictionary["principalInvestigator"] = self.principalInvestigator
        nillableDictionary["qmScore"] = self.qmScore
        nillableDictionary["reverseCorrelation"] = self.reverseCorrelation
        nillableDictionary["significanceExplanation"] = self.significanceExplanation
        nillableDictionary["statisticalSignificance"] = self.statisticalSignificance
        nillableDictionary["strengthLevel"] = self.strengthLevel
        nillableDictionary["studyAbstract"] = self.studyAbstract
        nillableDictionary["studyBackground"] = self.studyBackground
        nillableDictionary["studyDesign"] = self.studyDesign
        nillableDictionary["studyLimitations"] = self.studyLimitations
        nillableDictionary["studyLinkDynamic"] = self.studyLinkDynamic
        nillableDictionary["studyLinkFacebook"] = self.studyLinkFacebook
        nillableDictionary["studyLinkGoogle"] = self.studyLinkGoogle
        nillableDictionary["studyLinkTwitter"] = self.studyLinkTwitter
        nillableDictionary["studyLinkStatic"] = self.studyLinkStatic
        nillableDictionary["studyObjective"] = self.studyObjective
        nillableDictionary["studyResults"] = self.studyResults
        nillableDictionary["studyTitle"] = self.studyTitle
        nillableDictionary["timestamp"] = self.timestamp
        nillableDictionary["updatedAt"] = self.updatedAt?.encodeToJSON()
        nillableDictionary["userVote"] = self.userVote
        nillableDictionary["valuePredictingHighOutcome"] = self.valuePredictingHighOutcome
        nillableDictionary["valuePredictingHighOutcomeExplanation"] = self.valuePredictingHighOutcomeExplanation
        nillableDictionary["valuePredictingLowOutcome"] = self.valuePredictingLowOutcome
        nillableDictionary["valuePredictingLowOutcomeExplanation"] = self.valuePredictingLowOutcomeExplanation
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
