//
// CorrelationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    public class CorrelationsAPI: APIBase {
    
        /**
         
         Get correlations
         
         - GET /correlations
         - Get correlations.<br>Supported filter parameters:<br><ul><li><b>correlationCoefficient</b> - Pearson correlation coefficient between cause and effect after lagging by onset delay and grouping by duration of action</li><li><b>onsetDelay</b> - The number of seconds which pass following a cause measurement before an effect would likely be observed.</li><li><b>durationOfAction</b> - The time in seconds over which the cause would be expected to exert a measurable effect. We have selected a default value for each variable. This default value may be replaced by a user specified by adjusting their variable user settings.</li><li><b>lastUpdated</b> - The time that this measurement was last updated in the UTC format \"YYYY-MM-DDThh:mm:ss\"</li></ul><br>
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: effect (query) ORIGINAL variable name of the effect variable for which the user desires correlations
         :param: cause (query) ORIGINAL variable name of the cause variable for which the user desires correlations
         :param: limit (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0.
         :param: offset (query) Now suppose you wanted to show results 11-20. You&#39;d set the offset to 10 and the limit to 10.
         :param: sort (query) Sort by given field. If the field is prefixed with `-, it will sort in descending order.

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func correlationsGet(#effect: String?, cause: String?, limit: Int?, offset: Int?, sort: Int?) -> RequestBuilder<[Correlation]> {
            let path = "/correlations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "effect": effect,
                "cause": cause,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get average correlations for variables containing search term
         
         - GET /public/correlations/search/{search}
         - Returns the average correlations from all users for all public variables that contain the characters in the search query. Returns average of all users public variable correlations with a specified cause or effect.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: search (path) Name of the variable that you want to know the causes or effects of.
         :param: effectOrCause (query) Specifies whether to return the effects or causes of the searched variable.

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func publicCorrelationsSearchSearchGet(#search: String, effectOrCause: String) -> RequestBuilder<[Correlation]> {
            var path = "/public/correlations/search/{search}"
            path = path.stringByReplacingOccurrencesOfString("{search}", withString: "\(search)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "effectOrCause": effectOrCause
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Add correlation or/and vote for it
         
         - POST /v1/correlations
         - Add correlation or/and vote for it
         - OAuth:
           - type: oauth2
           - name: oauth2
         
         :param: body (body) Provides correlation data

         :returns: Promise<Response<Void>> 
         */
        public class func v1CorrelationsPost(#body: PostCorrelation) -> RequestBuilder<Void> {
            let path = "/v1/correlations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search user correlations for a given effect
         
         - GET /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/causes
         - Returns average of all correlations and votes for all user cause variables for a given effect. If parameter \"include_public\" is used, it also returns public correlations. User correlation overwrites or supersedes public correlation.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: organizationId (path) Organization ID
         :param: userId (path) User id
         :param: variableName (path) Effect variable name
         :param: organizationToken (query) Organization access token
         :param: includePublic (query) Include bublic correlations, Can be \&quot;1\&quot; or empty.

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func v1OrganizationsOrganizationIdUsersUserIdVariablesVariableNameCausesGet(#organizationId: Int, userId: Int, variableName: String, organizationToken: String, includePublic: String?) -> RequestBuilder<[Correlation]> {
            var path = "/v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/causes"
            path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "organizationToken": organizationToken,
                "includePublic": includePublic
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Search user correlations for a given cause
         
         - GET /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/effects
         - Returns average of all correlations and votes for all user cause variables for a given effect. If parameter \"include_public\" is used, it also returns public correlations. User correlation overwrites or supersedes public correlation.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "success" : true,
  "message" : "aeiou",
  "status" : ""
} ]}]
         
         :param: organizationId (path) Organization ID
         :param: userId (path) User id
         :param: variableName (path) Cause variable name
         :param: organizationToken (query) Organization access token
         :param: includePublic (query) Include bublic correlations, Can be \&quot;1\&quot; or empty.

         :returns: Promise<Response<[CommonResponse]>> 
         */
        public class func v1OrganizationsOrganizationIdUsersUserIdVariablesVariableNameEffectsGet(#organizationId: Int, userId: Int, variableName: String, organizationToken: String, includePublic: String?) -> RequestBuilder<[CommonResponse]> {
            var path = "/v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/effects"
            path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "organizationToken": organizationToken,
                "includePublic": includePublic
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[CommonResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Search user correlations for a given effect
         
         - GET /v1/variables/{variableName}/causes
         - Returns average of all correlations and votes for all user cause variables for a given effect
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Effect variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func v1VariablesVariableNameCausesGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/causes"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search user correlations for a given cause
         
         - GET /v1/variables/{variableName}/effects
         - Returns average of all correlations and votes for all user effect variables for a given cause
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Cause variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func v1VariablesVariableNameEffectsGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/effects"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search public correlations for a given effect
         
         - GET /v1/variables/{variableName}/public/causes
         - Returns average of all correlations and votes for all public cause variables for a given effect
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Effect variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func v1VariablesVariableNamePublicCausesGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/public/causes"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search public correlations for a given cause
         
         - GET /v1/variables/{variableName}/public/effects
         - Returns average of all correlations and votes for all public cause variables for a given cause
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 1.3579000000000001069366817318950779736042022705078125,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Cause variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        public class func v1VariablesVariableNamePublicEffectsGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/public/effects"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Post or update vote
         
         - POST /v1/votes
         - This is to enable users to indicate their opinion on the plausibility of a causal relationship between a treatment and outcome. QuantiModo incorporates crowd-sourced plausibility estimations into their algorithm. This is done allowing user to indicate their view of the plausibility of each relationship with thumbs up/down buttons placed next to each prediction.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou",
  "status" : ""
}}]
         
         :param: cause (query) Cause variable name
         :param: effect (query) Effect variable name
         :param: vote (query) Vote: 0 (for implausible) or 1 (for plausible)

         :returns: Promise<Response<CommonResponse>> 
         */
        public class func v1VotesPost(#cause: String, effect: String, vote: Bool?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/votes"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "cause": cause,
                "effect": effect,
                "vote": vote
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete vote
         
         - POST /v1/votes/delete
         - Delete previously posted vote
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou",
  "status" : ""
}}]
         
         :param: cause (query) Cause variable name
         :param: effect (query) Effect variable name

         :returns: Promise<Response<CommonResponse>> 
         */
        public class func v1VotesDeletePost(#cause: String, effect: String) -> RequestBuilder<CommonResponse> {
            let path = "/v1/votes/delete"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "cause": cause,
                "effect": effect
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
