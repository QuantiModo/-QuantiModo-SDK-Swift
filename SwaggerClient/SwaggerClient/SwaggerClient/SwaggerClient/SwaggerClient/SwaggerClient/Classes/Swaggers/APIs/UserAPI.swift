//
// UserAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    public class UserAPI: APIBase {
    
        /**
         
         Get all available units for variableGet authenticated user
         
         - GET /user/me
         - Returns user info for the currently authenticated user.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{contentType=application/json, example={
  "administrator" : true,
  "wpId" : "",
  "displayName" : "aeiou",
  "loginName" : "aeiou",
  "id" : "",
  "email" : "aeiou",
  "token" : "aeiou"
}}]

         :returns: Promise<Response<User>> 
         */
        public class func userMeGet() -> RequestBuilder<User> {
            let path = "/user/me"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get user tokens for existing users, create new users
         
         - POST /v1/organizations/{organizationId}/users
         - Get user tokens for existing users, create new users
         - examples: [{contentType=application/json, example={
  "code" : "",
  "message" : "aeiou",
  "user" : {
    "access_token" : "aeiou",
    "_id" : ""
  }
}}]
         
         :param: organizationId (path) Organization ID
         :param: body (body) Provides organization token and user ID

         :returns: Promise<Response<UserTokenSuccessfulResponse>> 
         */
        public class func v1OrganizationsOrganizationIdUsersPost(#organizationId: Int, body: UserTokenRequest) -> RequestBuilder<UserTokenSuccessfulResponse> {
            var path = "/v1/organizations/{organizationId}/users"
            path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<UserTokenSuccessfulResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
