//
// MeasurementSet.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class MeasurementSet: JSONEncodable {

    public enum CombinationOperation: String { 
        case Mean = "MEAN"
        case Sum = "SUM"
    }
    
    /** Array of timestamps, values, and optional notes */
    public var measurements: [ValueObject]?
    /** ORIGINAL name of the variable for which we are creating the measurement records */
    public var name: String?
    /** Name of the application or device used to record the measurement values */
    public var source: String?
    /** Variable category name */
    public var category: String?
    /** Way to aggregate measurements over time. Options are \&quot;MEAN\&quot; or \&quot;SUM\&quot;.  SUM should be used for things like minutes of exercise.  If you use MEAN for exercise, then a person might exercise more minutes in one day but add separate measurements that were smaller.  So when we are doing correlational analysis, we would think that the person exercised less that day even though they exercised more.  Conversely, we must use MEAN for things such as ratings which cannot be SUMMED. */
    public var combinationOperation: CombinationOperation?
    /** Unit of measurement */
    public var unit: String?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["measurements"] = self.measurements?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["source"] = self.source
        nillableDictionary["category"] = self.category
        nillableDictionary["combinationOperation"] = self.combinationOperation?.rawValue
        nillableDictionary["unit"] = self.unit
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
