//
// UserVariable.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class UserVariable: JSONEncodable {

    /** ID of the parent variable if this variable has any parent */
    public var parent_id: Int?
    /** client_id */
    public var client_id: String?
    /** ID of variable */
    public var variable_id: Int?
    /** ID of unit to use for this variable */
    public var default_unit_id: Int?
    /** Minimum reasonable value for this variable (uses default unit) */
    public var minimum_allowed_value: Float?
    /** Maximum reasonable value for this variable (uses default unit) */
    public var maximum_allowed_value: Float?
    /** Value for replacing null measurements */
    public var filling_value: Float?
    /** The Variable this Variable should be joined with. If the variable is joined with some other variable then it is not shown to user in the list of variables */
    public var join_with: Int?
    /** How long it takes for a measurement in this variable to take effect */
    public var onset_delay: Int?
    /** Estimated duration of time following the onset delay in which a stimulus produces a perceivable effect */
    public var duration_of_action: Int?
    /** ID of variable category */
    public var variable_category_id: Int?
    /** updated */
    public var updated: Int?
    /** Is variable public */
    public var Swaggerpublic: Int?
    /** A value of 1 indicates that this variable is generally a cause in a causal relationship.  An example of a causeOnly variable would be a variable such as Cloud Cover which would generally not be influenced by the behaviour of the user */
    public var cause_only: Bool?
    /** 0 -&gt; No filling, 1 -&gt; Use filling-value */
    public var filling_type: String?
    /** Number of measurements */
    public var number_of_measurements: Int?
    /** Number of processed measurements */
    public var number_of_processed_measurements: Int?
    /** Number of measurements at last analysis */
    public var measurements_at_last_analysis: Int?
    /** ID of last Unit */
    public var last_unit_id: Int?
    /** ID of last original Unit */
    public var last_original_unit_id: Int?
    /** Last Value */
    public var last_value: Float?
    /** Last original value which is stored */
    public var last_original_value: Int?
    /** ID of last source */
    public var last_source_id: Int?
    /** Number of correlations for this variable */
    public var number_of_correlations: Int?
    /** status */
    public var status: String?
    /** error_message */
    public var error_message: String?
    /** When this variable or its settings were last updated */
    public var last_successful_update_time: NSDate?
    /** Standard deviation */
    public var standard_deviation: Float?
    /** Variance */
    public var variance: Float?
    /** Minimum recorded daily value of this variable */
    public var minimum_recorded_daily_value: Float?
    /** Maximum recorded daily value of this variable */
    public var maximum_recorded_daily_value: Float?
    /** Mean */
    public var mean: Float?
    /** Median */
    public var median: Float?
    /** Most common Unit ID */
    public var most_common_unit_id: Int?
    /** Most common value */
    public var most_common_value: Float?
    /** Number of unique daily values */
    public var number_of_unique_daily_values: Float?
    /** Number of changes */
    public var number_of_changes: Int?
    /** Skewness */
    public var skewness: Float?
    /** Kurtosis */
    public var kurtosis: Float?
    /** Latitude */
    public var latitude: Float?
    /** Longitude */
    public var longitude: Float?
    /** Location */
    public var location: String?
    /** created_at */
    public var created_at: NSDate?
    /** updated_at */
    public var updated_at: NSDate?
    /** Outcome variables (those with `outcome` == 1) are variables for which a human would generally want to identify the influencing factors.  These include symptoms of illness, physique, mood, cognitive performance, etc.  Generally correlation calculations are only performed on outcome variables */
    public var outcome: Bool?
    /** Comma-separated list of source names to limit variables to those sources */
    public var sources: String?
    /** Earliest source time */
    public var earliest_source_time: Int?
    /** Latest source time */
    public var latest_source_time: Int?
    /** Earliest measurement time */
    public var earliest_measurement_time: Int?
    /** Latest measurement time */
    public var latest_measurement_time: Int?
    /** Earliest filling time */
    public var earliest_filling_time: Int?
    /** Latest filling time */
    public var latest_filling_time: Int?
    

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["parent_id"] = self.parent_id
        nillableDictionary["client_id"] = self.client_id
        nillableDictionary["variable_id"] = self.variable_id
        nillableDictionary["default_unit_id"] = self.default_unit_id
        nillableDictionary["minimum_allowed_value"] = self.minimum_allowed_value
        nillableDictionary["maximum_allowed_value"] = self.maximum_allowed_value
        nillableDictionary["filling_value"] = self.filling_value
        nillableDictionary["join_with"] = self.join_with
        nillableDictionary["onset_delay"] = self.onset_delay
        nillableDictionary["duration_of_action"] = self.duration_of_action
        nillableDictionary["variable_category_id"] = self.variable_category_id
        nillableDictionary["updated"] = self.updated
        nillableDictionary["Swaggerpublic"] = self.Swaggerpublic
        nillableDictionary["cause_only"] = self.cause_only
        nillableDictionary["filling_type"] = self.filling_type
        nillableDictionary["number_of_measurements"] = self.number_of_measurements
        nillableDictionary["number_of_processed_measurements"] = self.number_of_processed_measurements
        nillableDictionary["measurements_at_last_analysis"] = self.measurements_at_last_analysis
        nillableDictionary["last_unit_id"] = self.last_unit_id
        nillableDictionary["last_original_unit_id"] = self.last_original_unit_id
        nillableDictionary["last_value"] = self.last_value
        nillableDictionary["last_original_value"] = self.last_original_value
        nillableDictionary["last_source_id"] = self.last_source_id
        nillableDictionary["number_of_correlations"] = self.number_of_correlations
        nillableDictionary["status"] = self.status
        nillableDictionary["error_message"] = self.error_message
        nillableDictionary["last_successful_update_time"] = self.last_successful_update_time?.encodeToJSON()
        nillableDictionary["standard_deviation"] = self.standard_deviation
        nillableDictionary["variance"] = self.variance
        nillableDictionary["minimum_recorded_daily_value"] = self.minimum_recorded_daily_value
        nillableDictionary["maximum_recorded_daily_value"] = self.maximum_recorded_daily_value
        nillableDictionary["mean"] = self.mean
        nillableDictionary["median"] = self.median
        nillableDictionary["most_common_unit_id"] = self.most_common_unit_id
        nillableDictionary["most_common_value"] = self.most_common_value
        nillableDictionary["number_of_unique_daily_values"] = self.number_of_unique_daily_values
        nillableDictionary["number_of_changes"] = self.number_of_changes
        nillableDictionary["skewness"] = self.skewness
        nillableDictionary["kurtosis"] = self.kurtosis
        nillableDictionary["latitude"] = self.latitude
        nillableDictionary["longitude"] = self.longitude
        nillableDictionary["location"] = self.location
        nillableDictionary["created_at"] = self.created_at?.encodeToJSON()
        nillableDictionary["updated_at"] = self.updated_at?.encodeToJSON()
        nillableDictionary["outcome"] = self.outcome
        nillableDictionary["sources"] = self.sources
        nillableDictionary["earliest_source_time"] = self.earliest_source_time
        nillableDictionary["latest_source_time"] = self.latest_source_time
        nillableDictionary["earliest_measurement_time"] = self.earliest_measurement_time
        nillableDictionary["latest_measurement_time"] = self.latest_measurement_time
        nillableDictionary["earliest_filling_time"] = self.earliest_filling_time
        nillableDictionary["latest_filling_time"] = self.latest_filling_time
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
