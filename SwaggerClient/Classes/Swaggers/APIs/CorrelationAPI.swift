//
// CorrelationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class CorrelationAPI: APIBase {
    
        /**
         
         Get all Correlations
         
         - GET /correlations
         - Get all Correlations
         - examples: [{example={
  "data" : [ {
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "number_of_pairs" : 123,
    "error" : "aeiou",
    "effect_changes" : 123,
    "cause_changes" : 123,
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_id" : 123,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "timestamp" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2015-11-05T03:17:19.713+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "qm_score" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit" : "aeiou",
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.713+0000",
    "user_id" : 123,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "onset_delay" : 123
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter timestamp: (query) timestamp
         - parameter userId: (query) user_id
         - parameter correlation: (query) correlation
         - parameter causeId: (query) cause_id
         - parameter effectId: (query) effect_id
         - parameter onsetDelay: (query) onset_delay
         - parameter durationOfAction: (query) duration_of_action
         - parameter numberOfPairs: (query) number_of_pairs
         - parameter valuePredictingHighOutcome: (query) value_predicting_high_outcome
         - parameter valuePredictingLowOutcome: (query) value_predicting_low_outcome
         - parameter optimalPearsonProduct: (query) optimal_pearson_product
         - parameter vote: (query) vote
         - parameter statisticalSignificance: (query) statistical_significance
         - parameter causeUnit: (query) cause_unit
         - parameter causeUnitId: (query) cause_unit_id
         - parameter causeChanges: (query) cause_changes
         - parameter effectChanges: (query) effect_changes
         - parameter qmScore: (query) qm_score
         - parameter error: (query) error
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter reversePearsonCorrelationCoefficient: (query) reverse_pearson_correlation_coefficient
         - parameter predictivePearsonCorrelationCoefficient: (query) predictive_pearson_correlation_coefficient
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_7> 
         */
        public class func correlationsGet(timestamp timestamp: Int?, userId: Int?, correlation: Double?, causeId: Int?, effectId: Int?, onsetDelay: Int?, durationOfAction: Int?, numberOfPairs: Int?, valuePredictingHighOutcome: Double?, valuePredictingLowOutcome: Double?, optimalPearsonProduct: Double?, vote: Double?, statisticalSignificance: Double?, causeUnit: String?, causeUnitId: Int?, causeChanges: Int?, effectChanges: Int?, qmScore: Double?, error: String?, createdAt: String?, updatedAt: String?, reversePearsonCorrelationCoefficient: Double?, predictivePearsonCorrelationCoefficient: Double?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_7> {
            let path = "/correlations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "timestamp": timestamp,
                "userId": userId,
                "correlation": correlation,
                "causeId": causeId,
                "effectId": effectId,
                "onsetDelay": onsetDelay,
                "durationOfAction": durationOfAction,
                "numberOfPairs": numberOfPairs,
                "valuePredictingHighOutcome": valuePredictingHighOutcome,
                "valuePredictingLowOutcome": valuePredictingLowOutcome,
                "optimalPearsonProduct": optimalPearsonProduct,
                "vote": vote,
                "statisticalSignificance": statisticalSignificance,
                "causeUnit": causeUnit,
                "causeUnitId": causeUnitId,
                "causeChanges": causeChanges,
                "effectChanges": effectChanges,
                "qmScore": qmScore,
                "error": error,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "reversePearsonCorrelationCoefficient": reversePearsonCorrelationCoefficient,
                "predictivePearsonCorrelationCoefficient": predictivePearsonCorrelationCoefficient,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_7>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Correlation
         
         - POST /correlations
         - Store Correlation
         - examples: [{example={
  "data" : {
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "number_of_pairs" : 123,
    "error" : "aeiou",
    "effect_changes" : 123,
    "cause_changes" : 123,
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_id" : 123,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "timestamp" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2015-11-05T03:17:19.727+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "qm_score" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit" : "aeiou",
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.727+0000",
    "user_id" : 123,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "onset_delay" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Correlation that should be stored

         - returns: RequestBuilder<Inline_response_200_8> 
         */
        public class func correlationsPost(body body: Correlation?) -> RequestBuilder<Inline_response_200_8> {
            let path = "/correlations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_8>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Correlation
         
         - GET /correlations/{id}
         - Get Correlation
         - examples: [{example={
  "data" : {
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "number_of_pairs" : 123,
    "error" : "aeiou",
    "effect_changes" : 123,
    "cause_changes" : 123,
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_id" : 123,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "timestamp" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2015-11-05T03:17:19.730+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "qm_score" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit" : "aeiou",
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.730+0000",
    "user_id" : 123,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "onset_delay" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Correlation

         - returns: RequestBuilder<Inline_response_200_8> 
         */
        public class func correlationsIdGet(id id: Int) -> RequestBuilder<Inline_response_200_8> {
            var path = "/correlations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_8>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Correlation
         
         - PUT /correlations/{id}
         - Update Correlation
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Correlation
         - parameter body: (body) Correlation that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func correlationsIdPut(id id: Int, body: Correlation?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/correlations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Correlation
         
         - DELETE /correlations/{id}
         - Delete Correlation
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Correlation

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func correlationsIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/correlations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
