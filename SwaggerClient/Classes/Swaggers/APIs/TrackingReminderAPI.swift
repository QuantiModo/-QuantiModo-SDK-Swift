//
// TrackingReminderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class TrackingReminderAPI: APIBase {
    
        /**
         
         Get tracking reminders
         
         - GET /trackingReminders
         - Users can be reminded to track certain variables at a specified frequency with a default value.
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "reminder_sound" : "aeiou",
    "pop_up" : true,
    "notification_bar" : true,
    "sms" : true,
    "last_tracked" : "2016-02-09T02:17:55.466+0000",
    "last_reminded" : "2016-02-09T02:17:55.466+0000",
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.466+0000",
    "reminder_end_time" : "aeiou",
    "email" : true,
    "default_value" : 1.3579000000000001069366817318950779736042022705078125,
    "reminder_start_time" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.466+0000",
    "user_id" : 123,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "reminder_frequency" : 123
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter clientId: (query) The ID of the client application which last created or updated this tracking reminder
         - parameter userId: (query) ID of the user who created a reminder
         - parameter variableId: (query) Id for the variable to be tracked
         - parameter popUp: (query) True if the reminders should appear as a popup notification
         - parameter sms: (query) True if the reminders should be delivered via SMS
         - parameter email: (query) True if the reminders should be delivered via email
         - parameter notificationBar: (query) True if the reminders should appear in the notification bar
         - parameter lastReminded: (query) ISO 8601 timestamp for the last time a reminder was sent
         - parameter lastTracked: (query) ISO 8601 timestamp for the last time a measurement was received for this user and variable
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_6> 
         */
        public class func trackingRemindersGet(accessToken accessToken: String?, clientId: String?, userId: Int?, variableId: Int?, popUp: Bool?, sms: Bool?, email: Bool?, notificationBar: Bool?, lastReminded: String?, lastTracked: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_6> {
            let path = "/trackingReminders"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "clientId": clientId,
                "userId": userId,
                "variableId": variableId,
                "popUp": popUp,
                "sms": sms,
                "email": email,
                "notificationBar": notificationBar,
                "lastReminded": lastReminded,
                "lastTracked": lastTracked,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_6>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store TrackingReminder
         
         - POST /trackingReminders
         - This is to enable users to indicate their opinion on the plausibility of a causal relationship between a treatment and outcome. QuantiModo incorporates crowd-sourced plausibility estimations into their algorithm. This is done allowing user to indicate their view of the plausibility of each relationship with thumbs up/down buttons placed next to each prediction.
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "reminder_sound" : "aeiou",
    "pop_up" : true,
    "notification_bar" : true,
    "sms" : true,
    "last_tracked" : "2016-02-09T02:17:55.470+0000",
    "last_reminded" : "2016-02-09T02:17:55.470+0000",
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.470+0000",
    "reminder_end_time" : "aeiou",
    "email" : true,
    "default_value" : 1.3579000000000001069366817318950779736042022705078125,
    "reminder_start_time" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.470+0000",
    "user_id" : 123,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "reminder_frequency" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) TrackingReminder that should be stored

         - returns: RequestBuilder<Inline_response_200_23> 
         */
        public class func trackingRemindersPost(accessToken accessToken: String?, body: TrackingReminder?) -> RequestBuilder<Inline_response_200_23> {
            let path = "/trackingReminders"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_23>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get TrackingReminder
         
         - GET /trackingReminders/{id}
         - Get TrackingReminder
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "reminder_sound" : "aeiou",
    "pop_up" : true,
    "notification_bar" : true,
    "sms" : true,
    "last_tracked" : "2016-02-09T02:17:55.472+0000",
    "last_reminded" : "2016-02-09T02:17:55.472+0000",
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.472+0000",
    "reminder_end_time" : "aeiou",
    "email" : true,
    "default_value" : 1.3579000000000001069366817318950779736042022705078125,
    "reminder_start_time" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.472+0000",
    "user_id" : 123,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "reminder_frequency" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of TrackingReminder
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_23> 
         */
        public class func trackingRemindersIdGet(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_23> {
            var path = "/trackingReminders/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_23>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update TrackingReminder
         
         - PUT /trackingReminders/{id}
         - Update TrackingReminder
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of TrackingReminder
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) TrackingReminder that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func trackingRemindersIdPut(id id: Int, accessToken: String?, body: TrackingReminder?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/trackingReminders/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete TrackingReminder
         
         - DELETE /trackingReminders/{id}
         - Delete previously posted trackingReminder
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of TrackingReminder
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func trackingRemindersIdDelete(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/trackingReminders/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
