//
// UnitCategoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UnitCategoryAPI: APIBase {
    
        /**
         
         Get all UnitCategories
         
         - GET /unitCategories
         - Get all UnitCategories
         - examples: [{example={
  "data" : [ {
    "id" : "",
    "updated_at" : "2015-11-05T03:17:19.777+0000",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.777+0000"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter name: (query) name
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_15> 
         */
        public class func unitCategoriesGet(name name: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_15> {
            let path = "/unitCategories"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "name": name,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_15>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store UnitCategory
         
         - POST /unitCategories
         - Store UnitCategory
         - examples: [{example={
  "data" : {
    "id" : "",
    "updated_at" : "2015-11-05T03:17:19.788+0000",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.788+0000"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) UnitCategory that should be stored

         - returns: RequestBuilder<Inline_response_200_16> 
         */
        public class func unitCategoriesPost(body body: UnitCategory?) -> RequestBuilder<Inline_response_200_16> {
            let path = "/unitCategories"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_16>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get UnitCategory
         
         - GET /unitCategories/{id}
         - Get UnitCategory
         - examples: [{example={
  "data" : {
    "id" : "",
    "updated_at" : "2015-11-05T03:17:19.790+0000",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.790+0000"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UnitCategory

         - returns: RequestBuilder<Inline_response_200_16> 
         */
        public class func unitCategoriesIdGet(id id: Int) -> RequestBuilder<Inline_response_200_16> {
            var path = "/unitCategories/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_16>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update UnitCategory
         
         - PUT /unitCategories/{id}
         - Update UnitCategory
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UnitCategory
         - parameter body: (body) UnitCategory that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitCategoriesIdPut(id id: Int, body: UnitCategory?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/unitCategories/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete UnitCategory
         
         - DELETE /unitCategories/{id}
         - Delete UnitCategory
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UnitCategory

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitCategoriesIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/unitCategories/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
