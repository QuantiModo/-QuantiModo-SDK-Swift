//
// ConnectionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class ConnectionAPI: APIBase {
    
        /**
         
         Get all Connections
         
         - GET /connections
         - Get all Connections
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "id" : 123,
    "update_status" : "aeiou",
    "connector_id" : 123,
    "updated_at" : "2015-11-05T03:17:19.672+0000",
    "connect_status" : "aeiou",
    "update_requested_at" : "2015-11-05T03:17:19.672+0000",
    "last_successful_updated_at" : "2015-11-05T03:17:19.672+0000",
    "created_at" : "2015-11-05T03:17:19.672+0000",
    "user_id" : 123,
    "update_error" : "aeiou",
    "connect_error" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter userId: (query) user_id
         - parameter connectorId: (query) connector_id
         - parameter connectStatus: (query) connect_status
         - parameter connectError: (query) connect_error
         - parameter updateRequestedAt: (query) update_requested_at
         - parameter updateStatus: (query) update_status
         - parameter updateError: (query) update_error
         - parameter lastSuccessfulUpdatedAt: (query) last_successful_updated_at
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_3> 
         */
        public class func connectionsGet(userId userId: Int?, connectorId: Int?, connectStatus: String?, connectError: String?, updateRequestedAt: String?, updateStatus: String?, updateError: String?, lastSuccessfulUpdatedAt: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_3> {
            let path = "/connections"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "userId": userId,
                "connectorId": connectorId,
                "connectStatus": connectStatus,
                "connectError": connectError,
                "updateRequestedAt": updateRequestedAt,
                "updateStatus": updateStatus,
                "updateError": updateError,
                "lastSuccessfulUpdatedAt": lastSuccessfulUpdatedAt,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_3>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Connection
         
         - POST /connections
         - Store Connection
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "id" : 123,
    "update_status" : "aeiou",
    "connector_id" : 123,
    "updated_at" : "2015-11-05T03:17:19.690+0000",
    "connect_status" : "aeiou",
    "update_requested_at" : "2015-11-05T03:17:19.690+0000",
    "last_successful_updated_at" : "2015-11-05T03:17:19.690+0000",
    "created_at" : "2015-11-05T03:17:19.690+0000",
    "user_id" : 123,
    "update_error" : "aeiou",
    "connect_error" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Connection that should be stored

         - returns: RequestBuilder<Inline_response_200_4> 
         */
        public class func connectionsPost(body body: Connection?) -> RequestBuilder<Inline_response_200_4> {
            let path = "/connections"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_4>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Connection
         
         - GET /connections/{id}
         - Get Connection
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "id" : 123,
    "update_status" : "aeiou",
    "connector_id" : 123,
    "updated_at" : "2015-11-05T03:17:19.692+0000",
    "connect_status" : "aeiou",
    "update_requested_at" : "2015-11-05T03:17:19.692+0000",
    "last_successful_updated_at" : "2015-11-05T03:17:19.692+0000",
    "created_at" : "2015-11-05T03:17:19.692+0000",
    "user_id" : 123,
    "update_error" : "aeiou",
    "connect_error" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connection

         - returns: RequestBuilder<Inline_response_200_4> 
         */
        public class func connectionsIdGet(id id: Int) -> RequestBuilder<Inline_response_200_4> {
            var path = "/connections/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_4>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Connection
         
         - PUT /connections/{id}
         - Update Connection
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connection
         - parameter body: (body) Connection that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func connectionsIdPut(id id: Int, body: Connection?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/connections/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Connection
         
         - DELETE /connections/{id}
         - Delete Connection
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connection

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func connectionsIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/connections/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
