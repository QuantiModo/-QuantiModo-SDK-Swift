//
// UserVariableAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UserVariableAPI: APIBase {
    
        /**
         
         Get all UserVariables
         
         - GET /userVariables
         - Get all UserVariables
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "earliest_source_time" : 123,
    "number_of_unique_daily_values" : 1.3579000000000001069366817318950779736042022705078125,
    "location" : "aeiou",
    "number_of_correlations" : 123,
    "minimum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "sources" : "aeiou",
    "last_original_value" : 123,
    "updated" : 123,
    "maximum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "earliest_measurement_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "latest_measurement_time" : 123,
    "onset_delay" : 123,
    "parent_id" : 123,
    "number_of_measurements" : 123,
    "latest_source_time" : 123,
    "status" : "aeiou",
    "last_successful_update_time" : "2016-02-09T02:17:55.523+0000",
    "experiment_start_time" : "2016-02-09T02:17:55.524+0000",
    "median" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.524+0000",
    "last_source_id" : 123,
    "number_of_processed_measurements" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "last_unit_id" : 123,
    "default_unit_id" : 123,
    "standard_deviation" : 1.3579000000000001069366817318950779736042022705078125,
    "variable_category_id" : 123,
    "filling_type" : "aeiou",
    "most_common_value" : 1.3579000000000001069366817318950779736042022705078125,
    "join_with" : 123,
    "mean" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2016-02-09T02:17:55.524+0000",
    "user_id" : 123,
    "cause_only" : true,
    "variable_id" : 123,
    "earliest_filling_time" : 123,
    "number_of_changes" : 123,
    "most_common_unit_id" : 123,
    "kurtosis" : 1.3579000000000001069366817318950779736042022705078125,
    "last_value" : 1.3579000000000001069366817318950779736042022705078125,
    "latest_filling_time" : 123,
    "variance" : 1.3579000000000001069366817318950779736042022705078125,
    "experiment_end_time" : "2016-02-09T02:17:55.524+0000",
    "measurements_at_last_analysis" : 123,
    "outcome" : true,
    "last_original_unit_id" : 123,
    "filling_value" : 1.3579000000000001069366817318950779736042022705078125,
    "skewness" : 1.3579000000000001069366817318950779736042022705078125,
    "public" : 123,
    "duration_of_action" : 123,
    "minimum_recorded_value" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_recorded_daily_value" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter clientId: (query) The ID of the client application which last created or updated this user variable
         - parameter parentId: (query) ID of the parent variable if this variable has any parent
         - parameter variableId: (query) ID of variable
         - parameter userId: (query) User ID
         - parameter defaultUnitId: (query) D of unit to use for this variable
         - parameter minimumAllowedValue: (query) Minimum reasonable value for this variable (uses default unit)
         - parameter maximumAllowedValue: (query) Maximum reasonable value for this variable (uses default unit)
         - parameter fillingValue: (query) Value for replacing null measurements
         - parameter joinWith: (query) The Variable this Variable should be joined with. If the variable is joined with some other variable then it is not shown to user in the list of variables
         - parameter onsetDelay: (query) Estimated number of seconds that pass before a stimulus produces a perceivable effect
         - parameter durationOfAction: (query) Estimated duration of time following the onset delay in which a stimulus produces a perceivable effect
         - parameter variableCategoryId: (query) ID of variable category
         - parameter updated: (query) updated
         - parameter Swaggerpublic: (query) Is variable public
         - parameter causeOnly: (query) A value of 1 indicates that this variable is generally a cause in a causal relationship.  An example of a causeOnly variable would be a variable such as Cloud Cover which would generally not be influenced by the behaviour of the user
         - parameter fillingType: (query) 0 -&gt; No filling, 1 -&gt; Use filling-value
         - parameter numberOfMeasurements: (query) Number of measurements
         - parameter numberOfProcessedMeasurements: (query) Number of processed measurements
         - parameter measurementsAtLastAnalysis: (query) Number of measurements at last analysis
         - parameter lastUnitId: (query) ID of last Unit
         - parameter lastOriginalUnitId: (query) ID of last original Unit
         - parameter lastOriginalValue: (query) Last original value which is stored
         - parameter lastValue: (query) Last Value
         - parameter lastOriginalValue2: (query) Last original value which is stored
         - parameter lastSourceId: (query) ID of last source
         - parameter numberOfCorrelations: (query) Number of correlations for this variable
         - parameter status: (query) status
         - parameter errorMessage: (query) error_message
         - parameter lastSuccessfulUpdateTime: (query) When this variable or its settings were last updated
         - parameter standardDeviation: (query) Standard deviation
         - parameter variance: (query) Variance
         - parameter minimumRecordedValue: (query) Minimum recorded value of this variable
         - parameter maximumRecordedValue: (query) Maximum recorded value of this variable
         - parameter mean: (query) Mean
         - parameter median: (query) Median
         - parameter mostCommonUnitId: (query) Most common Unit ID
         - parameter mostCommonValue: (query) Most common value
         - parameter numberOfUniqueDailyValues: (query) Number of unique daily values
         - parameter numberOfChanges: (query) Number of changes
         - parameter skewness: (query) Skewness
         - parameter kurtosis: (query) Kurtosis
         - parameter latitude: (query) Latitude
         - parameter longitude: (query) Longitude
         - parameter location: (query) Location
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format
         - parameter outcome: (query) Outcome variables (those with `outcome` == 1) are variables for which a human would generally want to identify the influencing factors.  These include symptoms of illness, physique, mood, cognitive performance, etc.  Generally correlation calculations are only performed on outcome variables
         - parameter sources: (query) Comma-separated list of source names to limit variables to those sources
         - parameter earliestSourceTime: (query) Earliest source time
         - parameter latestSourceTime: (query) Latest source time
         - parameter earliestMeasurementTime: (query) Earliest measurement time
         - parameter latestMeasurementTime: (query) Latest measurement time
         - parameter earliestFillingTime: (query) Earliest filling time
         - parameter latestFillingTime: (query) Latest filling time
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_9> 
         */
        public class func userVariablesGet(accessToken accessToken: String?, clientId: String?, parentId: Int?, variableId: Int?, userId: Int?, defaultUnitId: Int?, minimumAllowedValue: Double?, maximumAllowedValue: Double?, fillingValue: Double?, joinWith: Int?, onsetDelay: Int?, durationOfAction: Int?, variableCategoryId: Int?, updated: Int?, Swaggerpublic: Int?, causeOnly: Bool?, fillingType: String?, numberOfMeasurements: Int?, numberOfProcessedMeasurements: Int?, measurementsAtLastAnalysis: Int?, lastUnitId: Int?, lastOriginalUnitId: Int?, lastOriginalValue: Int?, lastValue: Double?, lastOriginalValue2: Double?, lastSourceId: Int?, numberOfCorrelations: Int?, status: String?, errorMessage: String?, lastSuccessfulUpdateTime: String?, standardDeviation: Double?, variance: Double?, minimumRecordedValue: Double?, maximumRecordedValue: Double?, mean: Double?, median: Double?, mostCommonUnitId: Int?, mostCommonValue: Double?, numberOfUniqueDailyValues: Double?, numberOfChanges: Int?, skewness: Double?, kurtosis: Double?, latitude: Double?, longitude: Double?, location: String?, createdAt: String?, updatedAt: String?, outcome: Bool?, sources: String?, earliestSourceTime: Int?, latestSourceTime: Int?, earliestMeasurementTime: Int?, latestMeasurementTime: Int?, earliestFillingTime: Int?, latestFillingTime: Int?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_9> {
            let path = "/userVariables"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "clientId": clientId,
                "parentId": parentId,
                "variableId": variableId,
                "userId": userId,
                "defaultUnitId": defaultUnitId,
                "minimumAllowedValue": minimumAllowedValue,
                "maximumAllowedValue": maximumAllowedValue,
                "fillingValue": fillingValue,
                "joinWith": joinWith,
                "onsetDelay": onsetDelay,
                "durationOfAction": durationOfAction,
                "variableCategoryId": variableCategoryId,
                "updated": updated,
                "Swaggerpublic": Swaggerpublic,
                "causeOnly": causeOnly,
                "fillingType": fillingType,
                "numberOfMeasurements": numberOfMeasurements,
                "numberOfProcessedMeasurements": numberOfProcessedMeasurements,
                "measurementsAtLastAnalysis": measurementsAtLastAnalysis,
                "lastUnitId": lastUnitId,
                "lastOriginalUnitId": lastOriginalUnitId,
                "lastOriginalValue": lastOriginalValue,
                "lastValue": lastValue,
                "lastOriginalValue2": lastOriginalValue2,
                "lastSourceId": lastSourceId,
                "numberOfCorrelations": numberOfCorrelations,
                "status": status,
                "errorMessage": errorMessage,
                "lastSuccessfulUpdateTime": lastSuccessfulUpdateTime,
                "standardDeviation": standardDeviation,
                "variance": variance,
                "minimumRecordedValue": minimumRecordedValue,
                "maximumRecordedValue": maximumRecordedValue,
                "mean": mean,
                "median": median,
                "mostCommonUnitId": mostCommonUnitId,
                "mostCommonValue": mostCommonValue,
                "numberOfUniqueDailyValues": numberOfUniqueDailyValues,
                "numberOfChanges": numberOfChanges,
                "skewness": skewness,
                "kurtosis": kurtosis,
                "latitude": latitude,
                "longitude": longitude,
                "location": location,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "outcome": outcome,
                "sources": sources,
                "earliestSourceTime": earliestSourceTime,
                "latestSourceTime": latestSourceTime,
                "earliestMeasurementTime": earliestMeasurementTime,
                "latestMeasurementTime": latestMeasurementTime,
                "earliestFillingTime": earliestFillingTime,
                "latestFillingTime": latestFillingTime,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_9>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store UserVariable
         
         - POST /userVariables
         - Users can change things like the display name for a variable. They can also change the parameters used in analysis of that variable such as the expected duration of action for a variable to have an effect, the estimated delay before the onset of action. In order to filter out erroneous data, they are able to set the maximum and minimum reasonable daily values for a variable.
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "earliest_source_time" : 123,
    "number_of_unique_daily_values" : 1.3579000000000001069366817318950779736042022705078125,
    "location" : "aeiou",
    "number_of_correlations" : 123,
    "minimum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "sources" : "aeiou",
    "last_original_value" : 123,
    "updated" : 123,
    "maximum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "earliest_measurement_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "latest_measurement_time" : 123,
    "onset_delay" : 123,
    "parent_id" : 123,
    "number_of_measurements" : 123,
    "latest_source_time" : 123,
    "status" : "aeiou",
    "last_successful_update_time" : "2016-02-09T02:17:55.545+0000",
    "experiment_start_time" : "2016-02-09T02:17:55.546+0000",
    "median" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.546+0000",
    "last_source_id" : 123,
    "number_of_processed_measurements" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "last_unit_id" : 123,
    "default_unit_id" : 123,
    "standard_deviation" : 1.3579000000000001069366817318950779736042022705078125,
    "variable_category_id" : 123,
    "filling_type" : "aeiou",
    "most_common_value" : 1.3579000000000001069366817318950779736042022705078125,
    "join_with" : 123,
    "mean" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2016-02-09T02:17:55.546+0000",
    "user_id" : 123,
    "cause_only" : true,
    "variable_id" : 123,
    "earliest_filling_time" : 123,
    "number_of_changes" : 123,
    "most_common_unit_id" : 123,
    "kurtosis" : 1.3579000000000001069366817318950779736042022705078125,
    "last_value" : 1.3579000000000001069366817318950779736042022705078125,
    "latest_filling_time" : 123,
    "variance" : 1.3579000000000001069366817318950779736042022705078125,
    "experiment_end_time" : "2016-02-09T02:17:55.546+0000",
    "measurements_at_last_analysis" : 123,
    "outcome" : true,
    "last_original_unit_id" : 123,
    "filling_value" : 1.3579000000000001069366817318950779736042022705078125,
    "skewness" : 1.3579000000000001069366817318950779736042022705078125,
    "public" : 123,
    "duration_of_action" : 123,
    "minimum_recorded_value" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_recorded_daily_value" : 1.3579000000000001069366817318950779736042022705078125
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) UserVariable that should be stored

         - returns: RequestBuilder<Inline_response_200_30> 
         */
        public class func userVariablesPost(accessToken accessToken: String?, body: UserVariable?) -> RequestBuilder<Inline_response_200_30> {
            let path = "/userVariables"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_30>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get UserVariable
         
         - GET /userVariables/{id}
         - Get UserVariable
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "earliest_source_time" : 123,
    "number_of_unique_daily_values" : 1.3579000000000001069366817318950779736042022705078125,
    "location" : "aeiou",
    "number_of_correlations" : 123,
    "minimum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "sources" : "aeiou",
    "last_original_value" : 123,
    "updated" : 123,
    "maximum_allowed_value" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "earliest_measurement_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "latest_measurement_time" : 123,
    "onset_delay" : 123,
    "parent_id" : 123,
    "number_of_measurements" : 123,
    "latest_source_time" : 123,
    "status" : "aeiou",
    "last_successful_update_time" : "2016-02-09T02:17:55.549+0000",
    "experiment_start_time" : "2016-02-09T02:17:55.549+0000",
    "median" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.549+0000",
    "last_source_id" : 123,
    "number_of_processed_measurements" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "last_unit_id" : 123,
    "default_unit_id" : 123,
    "standard_deviation" : 1.3579000000000001069366817318950779736042022705078125,
    "variable_category_id" : 123,
    "filling_type" : "aeiou",
    "most_common_value" : 1.3579000000000001069366817318950779736042022705078125,
    "join_with" : 123,
    "mean" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2016-02-09T02:17:55.549+0000",
    "user_id" : 123,
    "cause_only" : true,
    "variable_id" : 123,
    "earliest_filling_time" : 123,
    "number_of_changes" : 123,
    "most_common_unit_id" : 123,
    "kurtosis" : 1.3579000000000001069366817318950779736042022705078125,
    "last_value" : 1.3579000000000001069366817318950779736042022705078125,
    "latest_filling_time" : 123,
    "variance" : 1.3579000000000001069366817318950779736042022705078125,
    "experiment_end_time" : "2016-02-09T02:17:55.549+0000",
    "measurements_at_last_analysis" : 123,
    "outcome" : true,
    "last_original_unit_id" : 123,
    "filling_value" : 1.3579000000000001069366817318950779736042022705078125,
    "skewness" : 1.3579000000000001069366817318950779736042022705078125,
    "public" : 123,
    "duration_of_action" : 123,
    "minimum_recorded_value" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_recorded_daily_value" : 1.3579000000000001069366817318950779736042022705078125
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariable
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_30> 
         */
        public class func userVariablesIdGet(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_30> {
            var path = "/userVariables/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_30>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update UserVariable
         
         - PUT /userVariables/{id}
         - Update UserVariable
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariable
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) UserVariable that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func userVariablesIdPut(id id: Int, accessToken: String?, body: UserVariable?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/userVariables/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete UserVariable
         
         - DELETE /userVariables/{id}
         - Delete UserVariable
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariable
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func userVariablesIdDelete(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/userVariables/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
