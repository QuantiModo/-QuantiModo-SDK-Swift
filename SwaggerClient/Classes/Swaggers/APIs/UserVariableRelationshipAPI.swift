//
// UserVariableRelationshipAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UserVariableRelationshipAPI: APIBase {
    
        /**
         
         Get all UserVariableRelationships
         
         - GET /userVariableRelationships
         - Get all UserVariableRelationships
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "confidence_level" : "aeiou",
    "vote" : "aeiou",
    "direction" : "aeiou",
    "sinn_rank" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_variable_id" : 123,
    "id" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "confidence_score" : 1.3579000000000001069366817318950779736042022705078125,
    "strength_level" : "aeiou",
    "outcome_variable_id" : 123,
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "user_id" : 123,
    "strength_score" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_unit_id" : 123,
    "duration_of_action" : 123,
    "onset_delay" : 123
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter id: (query) id
         - parameter confidenceLevel: (query) Our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
         - parameter confidenceScore: (query) A quantitative representation of our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
         - parameter direction: (query) Direction is positive if higher predictor values generally precede higher outcome values. Direction is negative if higher predictor values generally precede lower outcome values.
         - parameter durationOfAction: (query) Estimated number of seconds following the onset delay in which a stimulus produces a perceivable effect
         - parameter errorMessage: (query) error_message
         - parameter onsetDelay: (query) Estimated number of seconds that pass before a stimulus produces a perceivable effect
         - parameter outcomeVariableId: (query) Variable ID for the outcome variable
         - parameter predictorVariableId: (query) Variable ID for the predictor variable
         - parameter predictorUnitId: (query) ID for default unit of the predictor variable
         - parameter sinnRank: (query) A value representative of the relevance of this predictor relative to other predictors of this outcome.  Usually used for relevancy sorting.
         - parameter strengthLevel: (query) Can be weak, medium, or strong based on the size of the effect which the predictor appears to have on the outcome relative to other variable relationship strength scores.
         - parameter strengthScore: (query) A value represented to the size of the effect which the predictor appears to have on the outcome.
         - parameter userId: (query) user_id
         - parameter vote: (query) vote
         - parameter valuePredictingHighOutcome: (query) Value for the predictor variable (in it&#39;s default unit) which typically precedes an above average outcome value
         - parameter valuePredictingLowOutcome: (query) Value for the predictor variable (in it&#39;s default unit) which typically precedes a below average outcome value
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_8> 
         */
        public class func userVariableRelationshipsGet(accessToken accessToken: String?, id: Int?, confidenceLevel: String?, confidenceScore: Double?, direction: String?, durationOfAction: Int?, errorMessage: String?, onsetDelay: Int?, outcomeVariableId: Int?, predictorVariableId: Int?, predictorUnitId: Int?, sinnRank: Double?, strengthLevel: String?, strengthScore: Double?, userId: Int?, vote: String?, valuePredictingHighOutcome: Double?, valuePredictingLowOutcome: Double?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_8> {
            let path = "/userVariableRelationships"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "id": id,
                "confidenceLevel": confidenceLevel,
                "confidenceScore": confidenceScore,
                "direction": direction,
                "durationOfAction": durationOfAction,
                "errorMessage": errorMessage,
                "onsetDelay": onsetDelay,
                "outcomeVariableId": outcomeVariableId,
                "predictorVariableId": predictorVariableId,
                "predictorUnitId": predictorUnitId,
                "sinnRank": sinnRank,
                "strengthLevel": strengthLevel,
                "strengthScore": strengthScore,
                "userId": userId,
                "vote": vote,
                "valuePredictingHighOutcome": valuePredictingHighOutcome,
                "valuePredictingLowOutcome": valuePredictingLowOutcome,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_8>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store UserVariableRelationship
         
         - POST /userVariableRelationships
         - Store UserVariableRelationship
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "confidence_level" : "aeiou",
    "vote" : "aeiou",
    "direction" : "aeiou",
    "sinn_rank" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_variable_id" : 123,
    "id" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "confidence_score" : 1.3579000000000001069366817318950779736042022705078125,
    "strength_level" : "aeiou",
    "outcome_variable_id" : 123,
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "user_id" : 123,
    "strength_score" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_unit_id" : 123,
    "duration_of_action" : 123,
    "onset_delay" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) UserVariableRelationship that should be stored

         - returns: RequestBuilder<Inline_response_200_29> 
         */
        public class func userVariableRelationshipsPost(accessToken accessToken: String?, body: UserVariableRelationship?) -> RequestBuilder<Inline_response_200_29> {
            let path = "/userVariableRelationships"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_29>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get UserVariableRelationship
         
         - GET /userVariableRelationships/{id}
         - Get UserVariableRelationship
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "confidence_level" : "aeiou",
    "vote" : "aeiou",
    "direction" : "aeiou",
    "sinn_rank" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_variable_id" : 123,
    "id" : 123,
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "confidence_score" : 1.3579000000000001069366817318950779736042022705078125,
    "strength_level" : "aeiou",
    "outcome_variable_id" : 123,
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "error_message" : "aeiou",
    "user_id" : 123,
    "strength_score" : 1.3579000000000001069366817318950779736042022705078125,
    "predictor_unit_id" : 123,
    "duration_of_action" : 123,
    "onset_delay" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariableRelationship
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_29> 
         */
        public class func userVariableRelationshipsIdGet(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_29> {
            var path = "/userVariableRelationships/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_29>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update UserVariableRelationship
         
         - PUT /userVariableRelationships/{id}
         - Update UserVariableRelationship
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariableRelationship
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) UserVariableRelationship that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func userVariableRelationshipsIdPut(id id: Int, accessToken: String?, body: UserVariableRelationship?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/userVariableRelationships/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete UserVariableRelationship
         
         - DELETE /userVariableRelationships/{id}
         - Delete UserVariableRelationship
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of UserVariableRelationship
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func userVariableRelationshipsIdDelete(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/userVariableRelationships/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
