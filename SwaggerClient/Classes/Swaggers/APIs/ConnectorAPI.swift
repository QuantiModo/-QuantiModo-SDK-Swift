//
// ConnectorAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class ConnectorAPI: APIBase {
    
        /**
         
         Get all Connectors
         
         - GET /connectors
         - Get all Connectors
         - examples: [{example={
  "data" : [ {
    "id" : 123,
    "enabled" : true,
    "display_name" : "aeiou",
    "oauth" : true,
    "long_description" : "aeiou",
    "short_description" : "aeiou",
    "name" : "aeiou",
    "image" : "aeiou",
    "get_it_url" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter name: (query) name
         - parameter displayName: (query) display_name
         - parameter image: (query) image
         - parameter getItUrl: (query) get_it_url
         - parameter shortDescription: (query) short_description
         - parameter longDescription: (query) long_description
         - parameter enabled: (query) enabled
         - parameter oauth: (query) oauth
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_5> 
         */
        public class func connectorsGet(name name: String?, displayName: String?, image: String?, getItUrl: String?, shortDescription: String?, longDescription: String?, enabled: Bool?, oauth: Bool?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_5> {
            let path = "/connectors"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "name": name,
                "displayName": displayName,
                "image": image,
                "getItUrl": getItUrl,
                "shortDescription": shortDescription,
                "longDescription": longDescription,
                "enabled": enabled,
                "oauth": oauth,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_5>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Connector
         
         - POST /connectors
         - Store Connector
         - examples: [{example={
  "data" : {
    "id" : 123,
    "enabled" : true,
    "display_name" : "aeiou",
    "oauth" : true,
    "long_description" : "aeiou",
    "short_description" : "aeiou",
    "name" : "aeiou",
    "image" : "aeiou",
    "get_it_url" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Connector that should be stored

         - returns: RequestBuilder<Inline_response_200_6> 
         */
        public class func connectorsPost(body body: Connector?) -> RequestBuilder<Inline_response_200_6> {
            let path = "/connectors"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_6>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Connector
         
         - GET /connectors/{id}
         - Get Connector
         - examples: [{example={
  "data" : {
    "id" : 123,
    "enabled" : true,
    "display_name" : "aeiou",
    "oauth" : true,
    "long_description" : "aeiou",
    "short_description" : "aeiou",
    "name" : "aeiou",
    "image" : "aeiou",
    "get_it_url" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connector

         - returns: RequestBuilder<Inline_response_200_6> 
         */
        public class func connectorsIdGet(id id: Int) -> RequestBuilder<Inline_response_200_6> {
            var path = "/connectors/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_6>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Connector
         
         - PUT /connectors/{id}
         - Update Connector
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connector
         - parameter body: (body) Connector that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func connectorsIdPut(id id: Int, body: Connector?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/connectors/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Connector
         
         - DELETE /connectors/{id}
         - Delete Connector
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Connector

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func connectorsIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/connectors/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
