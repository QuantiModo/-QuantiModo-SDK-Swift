//
// TagsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class TagsAPI: APIBase {
    
        /**
         
         Post or update user tags or ingredients
         
         - POST /v1/userTags
         - This endpoint allows users to tag foods with their ingredients.  This information will then be used to infer the user intake of the different ingredients by just entering the foods. The inferred intake levels will then be used to determine the effects of different nutrients on the user during analysis.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Contains the new user tag data
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1UserTagsPost(body body: UserTag, accessToken: String?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/userTags"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete user tag or ingredient
         
         - POST /v1/userTags/delete
         - Delete previously created user tags or ingredients.
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter taggedVariableId: (query) This is the id of the variable being tagged with an ingredient or something.
         - parameter tagVariableId: (query) This is the id of the ingredient variable whose value is determined based on the value of the tagged variable.

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1UserTagsDeletePost(taggedVariableId taggedVariableId: Int, tagVariableId: Int) -> RequestBuilder<CommonResponse> {
            let path = "/v1/userTags/delete"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "taggedVariableId": taggedVariableId,
                "tagVariableId": tagVariableId
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
