//
// CorrelationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class CorrelationsAPI: APIBase {
    
        /**
         
         Get correlations
         
         - GET /correlations
         - Get correlations
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@62901535]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: effect (query) ORIGINAL variable name of the effect variable for which the user desires correlations
         :param: cause (query) ORIGINAL variable name of the cause variable for which the user desires correlations

         :returns: Promise<Response<[Correlation]>> 
         */
        func correlationsGet(#effect: String?, cause: String?) -> RequestBuilder<[Correlation]> {
            let path = "/correlations"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "effect": effect,
                "cause": cause
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get average correlations for variables containing search term
         
         - GET /public/correlations/search/{search}
         - Returns the average correlations from all users for all public variables that contain the characters in the search query. Returns average of all users public variable correlations with a specified cause or effect.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@2e6ac4f5]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: search (path) Name of the variable that you want to know the causes or effects of.
         :param: effectOrCause (query) Specifies whether to return the effects or causes of the searched variable.

         :returns: Promise<Response<[Correlation]>> 
         */
        func publicCorrelationsSearchSearchGet(#search: String, effectOrCause: String) -> RequestBuilder<[Correlation]> {
            var path = "/public/correlations/search/{search}"
            path = path.stringByReplacingOccurrencesOfString("{search}", withString: "\(search)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "effectOrCause": effectOrCause
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Add correlation or/and vote for it
         
         - POST /v1/correlations
         - Add correlation or/and vote for it
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@24776cf6]
         
         :param: body (body) Provides correlation data

         :returns: Promise<Response<Void>> 
         */
        func v1CorrelationsPost(#body: PostCorrelation) -> RequestBuilder<Void> {
            let path = "/v1/correlations"
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = body.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search user correlations for a given effect
         
         - GET /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/causes
         - Returns average of all correlations and votes for all user cause variables for a given effect. If parameter \"include_public\" is used, it also returns public correlations. User correlation overwrites or supersedes public correlation.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@11f52d88]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: organizationId (path) Organization ID
         :param: userId (path) User id
         :param: variableName (path) Effect variable name
         :param: organizationToken (query) Organization access token
         :param: includePublic (query) Include bublic correlations, Can be \&quot;1\&quot; or empty.

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1OrganizationsOrganizationIdUsersUserIdVariablesVariableNameCausesGet(#organizationId: Int, userId: Int, variableName: String, organizationToken: String, includePublic: String?) -> RequestBuilder<[Correlation]> {
            var path = "/v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/causes"
            path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "organizationToken": organizationToken,
                "includePublic": includePublic
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Search user correlations for a given cause
         
         - GET /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/effects
         - Returns average of all correlations and votes for all user cause variables for a given effect. If parameter \"include_public\" is used, it also returns public correlations. User correlation overwrites or supersedes public correlation.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@73aeab3e]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: organizationId (path) Organization ID
         :param: userId (path) User id
         :param: variableName (path) Cause variable name
         :param: organizationToken (query) Organization access token
         :param: includePublic (query) Include bublic correlations, Can be \&quot;1\&quot; or empty.

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1OrganizationsOrganizationIdUsersUserIdVariablesVariableNameEffectsGet(#organizationId: Int, userId: Int, variableName: String, organizationToken: String, includePublic: String?) -> RequestBuilder<[Correlation]> {
            var path = "/v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/effects"
            path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "organizationToken": organizationToken,
                "includePublic": includePublic
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Search user correlations for a given effect
         
         - GET /v1/variables/{variableName}/causes
         - Returns average of all correlations and votes for all user cause variables for a given effect
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@b9b84d2]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Effect variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1VariablesVariableNameCausesGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/causes"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search user correlations for a given cause
         
         - GET /v1/variables/{variableName}/effects
         - Returns average of all correlations and votes for all user effect variables for a given cause
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@1494498b]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Cause variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1VariablesVariableNameEffectsGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/effects"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search public correlations for a given effect
         
         - GET /v1/variables/{variableName}/public/causes
         - Returns average of all correlations and votes for all public cause variables for a given effect
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@2cb5bffc]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Effect variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1VariablesVariableNamePublicCausesGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/public/causes"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Search public correlations for a given cause
         
         - GET /v1/variables/{variableName}/public/effects
         - Returns average of all correlations and votes for all public cause variables for a given cause
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@2a44060f]
         - examples: [{contentType=application/json, example=[ {
  "correlationCoefficient" : 1.3579000000000001069366817318950779736042022705078125,
  "durationOfAction" : 1.3579000000000001069366817318950779736042022705078125,
  "cause" : "aeiou",
  "numberOfPairs" : 1.3579000000000001069366817318950779736042022705078125,
  "causalityFactor" : 1.3579000000000001069366817318950779736042022705078125,
  "effectCategory" : "aeiou",
  "statisticalSignificance" : "aeiou",
  "effectSize" : "aeiou",
  "effect" : "aeiou",
  "onsetDelay" : 3.149,
  "causeCategory" : "aeiou",
  "reverseCorrelation" : 1.3579000000000001069366817318950779736042022705078125,
  "timestamp" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
         
         :param: variableName (path) Cause variable name

         :returns: Promise<Response<[Correlation]>> 
         */
        func v1VariablesVariableNamePublicEffectsGet(#variableName: String) -> RequestBuilder<[Correlation]> {
            var path = "/v1/variables/{variableName}/public/effects"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Correlation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
