//
// AggregatedCorrelationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class AggregatedCorrelationAPI: APIBase {
    
        /**
         
         Get all AggregatedCorrelations
         
         - GET /aggregatedCorrelations
         - Get all AggregatedCorrelations
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "number_of_pairs" : 123,
    "cause_changes" : 123,
    "effect_id" : 123,
    "data_source" : "aeiou",
    "number_of_correlations" : 123,
    "number_of_users" : 123,
    "id" : 123,
    "error_message" : "aeiou",
    "cause_unit" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.204+0000",
    "onset_delay" : 123,
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_changes" : 123,
    "status" : "aeiou",
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "last_successful_update_time" : "2016-02-09T02:17:55.204+0000",
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.204+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "aggregate_qm_score" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter correlation: (query) Pearson correlation coefficient between cause and effect measurements
         - parameter causeId: (query) Variable ID of the predictor variable for which the user desires correlations
         - parameter effectId: (query) Variable ID of the outcome variable for which the user desires correlations
         - parameter onsetDelay: (query) User estimated (or default number of seconds) after cause measurement before a perceivable effect is observed
         - parameter durationOfAction: (query) Number of seconds over which the predictor variable event is expected to produce a perceivable effect following the onset delay
         - parameter numberOfPairs: (query) Number of predictor/outcome data points used in the analysis
         - parameter valuePredictingHighOutcome: (query) Predictor daily aggregated measurement value that predicts an above average effect measurement value (in default unit for predictor variable)
         - parameter valuePredictingLowOutcome: (query) Predictor daily aggregated measurement value that predicts a below average effect measurement value (in default unit for outcome variable)
         - parameter optimalPearsonProduct: (query) Optimal Pearson Product
         - parameter numberOfUsers: (query) Number of users whose data was used in this aggregation
         - parameter numberOfCorrelations: (query) Number of correlational analyses used in this aggregation
         - parameter statisticalSignificance: (query) A function of the effect size and sample size
         - parameter causeUnit: (query) Abbreviated unit name for the predictor variable
         - parameter causeUnitId: (query) Unit ID for the predictor variable
         - parameter causeChanges: (query) Number of times that the predictor time series changes
         - parameter effectChanges: (query) Number of times that the predictor time series changes
         - parameter aggregateQmScore: (query) Aggregated QM Score which is directly proportional with the relevance of each predictor or outcome
         - parameter createdAt: (query) Date at which the analysis was first performed
         - parameter updatedAt: (query) Date at which the analysis was last updated
         - parameter status: (query) Indicates whether an analysis is up to date (UPDATED), needs to be updated (WAITING), or had an error (ERROR)
         - parameter errorMessage: (query) Message describing any problems encountered during the analysis
         - parameter lastSuccessfulUpdateTime: (query) Last Successful update time
         - parameter reversePearsonCorrelationCoefficient: (query) Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation
         - parameter predictivePearsonCorrelationCoefficient: (query) Predictive Pearson Correlation Coefficient
         - parameter limit: (query) Limit the number of results returned
         - parameter offset: (query) Records from give Offset
         - parameter sort: (query) Sort records by given field

         - returns: RequestBuilder<Inline_response_200> 
         */
        public class func aggregatedCorrelationsGet(accessToken accessToken: String?, correlation: Double?, causeId: Int?, effectId: Int?, onsetDelay: Int?, durationOfAction: Int?, numberOfPairs: Int?, valuePredictingHighOutcome: Double?, valuePredictingLowOutcome: Double?, optimalPearsonProduct: Double?, numberOfUsers: Int?, numberOfCorrelations: Int?, statisticalSignificance: Double?, causeUnit: String?, causeUnitId: Int?, causeChanges: Int?, effectChanges: Int?, aggregateQmScore: Double?, createdAt: String?, updatedAt: String?, status: String?, errorMessage: String?, lastSuccessfulUpdateTime: String?, reversePearsonCorrelationCoefficient: Double?, predictivePearsonCorrelationCoefficient: Double?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200> {
            let path = "/aggregatedCorrelations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "correlation": correlation,
                "causeId": causeId,
                "effectId": effectId,
                "onsetDelay": onsetDelay,
                "durationOfAction": durationOfAction,
                "numberOfPairs": numberOfPairs,
                "valuePredictingHighOutcome": valuePredictingHighOutcome,
                "valuePredictingLowOutcome": valuePredictingLowOutcome,
                "optimalPearsonProduct": optimalPearsonProduct,
                "numberOfUsers": numberOfUsers,
                "numberOfCorrelations": numberOfCorrelations,
                "statisticalSignificance": statisticalSignificance,
                "causeUnit": causeUnit,
                "causeUnitId": causeUnitId,
                "causeChanges": causeChanges,
                "effectChanges": effectChanges,
                "aggregateQmScore": aggregateQmScore,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "status": status,
                "errorMessage": errorMessage,
                "lastSuccessfulUpdateTime": lastSuccessfulUpdateTime,
                "reversePearsonCorrelationCoefficient": reversePearsonCorrelationCoefficient,
                "predictivePearsonCorrelationCoefficient": predictivePearsonCorrelationCoefficient,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store AggregatedCorrelation
         
         - POST /aggregatedCorrelations
         - Store AggregatedCorrelation
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "number_of_pairs" : 123,
    "cause_changes" : 123,
    "effect_id" : 123,
    "data_source" : "aeiou",
    "number_of_correlations" : 123,
    "number_of_users" : 123,
    "id" : 123,
    "error_message" : "aeiou",
    "cause_unit" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.259+0000",
    "onset_delay" : 123,
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_changes" : 123,
    "status" : "aeiou",
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "last_successful_update_time" : "2016-02-09T02:17:55.259+0000",
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.259+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "aggregate_qm_score" : 1.3579000000000001069366817318950779736042022705078125
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) AggregatedCorrelation that should be stored

         - returns: RequestBuilder<Inline_response_200_1> 
         */
        public class func aggregatedCorrelationsPost(accessToken accessToken: String?, body: AggregatedCorrelation?) -> RequestBuilder<Inline_response_200_1> {
            let path = "/aggregatedCorrelations"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_1>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get AggregatedCorrelation
         
         - GET /aggregatedCorrelations/{id}
         - Get AggregatedCorrelation
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "number_of_pairs" : 123,
    "cause_changes" : 123,
    "effect_id" : 123,
    "data_source" : "aeiou",
    "number_of_correlations" : 123,
    "number_of_users" : 123,
    "id" : 123,
    "error_message" : "aeiou",
    "cause_unit" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.265+0000",
    "onset_delay" : 123,
    "predictive_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "effect_changes" : 123,
    "status" : "aeiou",
    "vote" : 1.3579000000000001069366817318950779736042022705078125,
    "correlation" : 1.3579000000000001069366817318950779736042022705078125,
    "optimal_pearson_product" : 1.3579000000000001069366817318950779736042022705078125,
    "last_successful_update_time" : "2016-02-09T02:17:55.265+0000",
    "value_predicting_high_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "updated_at" : "2016-02-09T02:17:55.265+0000",
    "value_predicting_low_outcome" : 1.3579000000000001069366817318950779736042022705078125,
    "cause_unit_id" : 123,
    "cause_id" : 123,
    "statistical_significance" : 1.3579000000000001069366817318950779736042022705078125,
    "duration_of_action" : 123,
    "reverse_pearson_correlation_coefficient" : 1.3579000000000001069366817318950779736042022705078125,
    "aggregate_qm_score" : 1.3579000000000001069366817318950779736042022705078125
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of AggregatedCorrelation
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_1> 
         */
        public class func aggregatedCorrelationsIdGet(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_1> {
            var path = "/aggregatedCorrelations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_1>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update AggregatedCorrelation
         
         - PUT /aggregatedCorrelations/{id}
         - Update AggregatedCorrelation
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of AggregatedCorrelation
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) AggregatedCorrelation that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func aggregatedCorrelationsIdPut(id id: Int, accessToken: String?, body: AggregatedCorrelation?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/aggregatedCorrelations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete AggregatedCorrelation
         
         - DELETE /aggregatedCorrelations/{id}
         - Delete AggregatedCorrelation
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of AggregatedCorrelation
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func aggregatedCorrelationsIdDelete(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/aggregatedCorrelations/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
