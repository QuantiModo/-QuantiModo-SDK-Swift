//
// VariableUserSourceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class VariableUserSourceAPI: APIBase {
    
        /**
         
         Get all VariableUserSources
         
         - GET /variableUserSources
         - Get all VariableUserSources
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "timestamp" : 123,
    "updated_at" : "2016-02-09T02:17:55.577+0000",
    "source_id" : 123,
    "created_at" : "2016-02-09T02:17:55.577+0000",
    "earliest_measurement_time" : 123,
    "user_id" : 123,
    "variable_id" : 123,
    "latest_measurement_time" : 123
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter variableId: (query) ID of variable
         - parameter userId: (query) ID of User
         - parameter timestamp: (query) Time that this measurement occurred Uses epoch minute (epoch time divided by 60)
         - parameter earliestMeasurementTime: (query) Earliest measurement time
         - parameter latestMeasurementTime: (query) Latest measurement time
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_10> 
         */
        public class func variableUserSourcesGet(accessToken accessToken: String?, variableId: Int?, userId: Int?, timestamp: Int?, earliestMeasurementTime: Int?, latestMeasurementTime: Int?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_10> {
            let path = "/variableUserSources"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "variableId": variableId,
                "userId": userId,
                "timestamp": timestamp,
                "earliestMeasurementTime": earliestMeasurementTime,
                "latestMeasurementTime": latestMeasurementTime,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_10>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store VariableUserSource
         
         - POST /variableUserSources
         - Store VariableUserSource
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "timestamp" : 123,
    "updated_at" : "2016-02-09T02:17:55.581+0000",
    "source_id" : 123,
    "created_at" : "2016-02-09T02:17:55.581+0000",
    "earliest_measurement_time" : 123,
    "user_id" : 123,
    "variable_id" : 123,
    "latest_measurement_time" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) VariableUserSource that should be stored

         - returns: RequestBuilder<Inline_response_200_33> 
         */
        public class func variableUserSourcesPost(accessToken accessToken: String?, body: VariableUserSource?) -> RequestBuilder<Inline_response_200_33> {
            let path = "/variableUserSources"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_33>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get VariableUserSource
         
         - GET /variableUserSources/{id}
         - Get VariableUserSource
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "timestamp" : 123,
    "updated_at" : "2016-02-09T02:17:55.583+0000",
    "source_id" : 123,
    "created_at" : "2016-02-09T02:17:55.583+0000",
    "earliest_measurement_time" : 123,
    "user_id" : 123,
    "variable_id" : 123,
    "latest_measurement_time" : 123
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of VariableUserSource
         - parameter sourceId: (query) source id of VariableUserSource
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_33> 
         */
        public class func variableUserSourcesIdGet(id id: Int, sourceId: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_33> {
            var path = "/variableUserSources/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "sourceId": sourceId
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_33>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update VariableUserSource
         
         - PUT /variableUserSources/{id}
         - Update VariableUserSource
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) variable_id of VariableUserSource
         - parameter sourceId: (query) source id of VariableUserSource
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) VariableUserSource that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func variableUserSourcesIdPut(id id: Int, sourceId: Int, accessToken: String?, body: VariableUserSource?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/variableUserSources/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete VariableUserSource
         
         - DELETE /variableUserSources/{id}
         - Delete VariableUserSource
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) variable_id of VariableUserSource
         - parameter sourceId: (query) source id of VariableUserSource
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func variableUserSourcesIdDelete(id id: Int, sourceId: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/variableUserSources/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "sourceId": sourceId
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
