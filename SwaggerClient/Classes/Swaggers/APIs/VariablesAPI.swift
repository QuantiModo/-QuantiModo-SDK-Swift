//
// VariablesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class VariablesAPI: APIBase {
    
        /**
         
         Store or Update a Correlation
         
         - POST /correlations
         - Store or Update a Correlation
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@254eaa27]
         
         :param: cause (query) 
         :param: effect (query) 
         :param: correlationcoefficient (query) 
         :param: vote (query) 

         :returns: Promise<Response<Void>> 
         */
        func correlationsPost(#cause: String, effect: String, correlationcoefficient: String, vote: String) -> RequestBuilder<Void> {
            let path = "/correlations"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "cause": cause,
                "effect": effect,
                "correlationcoefficient": correlationcoefficient,
                "vote": vote
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get public variables
         
         - GET /public/variables
         - This endpoint retrieves an array of all public variables. Public variables are things like foods, medications, symptoms, conditions, and anything not unique to a particular user. For instance, a telephone number or name would not be a public variable.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@3a3ea965]

         :returns: Promise<Response<Void>> 
         */
        func publicVariablesGet() -> RequestBuilder<Void> {
            let path = "/public/variables"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get top 5 PUBLIC variables with the most correlations
         
         - GET /public/variables/search/{search}
         - Get top 5 PUBLIC variables with the most correlations containing the entered search characters. For example, search for 'mood' as an effect. Since 'Overall Mood' has a lot of correlations with other variables, it should be in the autocomplete list.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@2a473696]
         
         :param: search (path) Search query can be some fraction of a variable name.
         :param: effectOrCause (query) Allows us to specify which column in the `correlations` table will be searched. Choices are effect or cause.

         :returns: Promise<Response<Void>> 
         */
        func publicVariablesSearchSearchGet(#search: String, effectOrCause: String?) -> RequestBuilder<Void> {
            var path = "/public/variables/search/{search}"
            path = path.stringByReplacingOccurrencesOfString("{search}", withString: "\(search)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "effectOrCause": effectOrCause
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get variable categories
         
         - GET /variableCategories
         - The variable categories include Activity, Causes of Illness, Cognitive Performance, Conditions, Environment, Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique, Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@67a69bf6]

         :returns: Promise<Response<Void>> 
         */
        func variableCategoriesGet() -> RequestBuilder<Void> {
            let path = "/variableCategories"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update User Settings for a Variable
         
         - POST /variableUserSettings
         - Users can change things like the display name for a variable. They can also change the parameters used in analysis of that variable such as the expected duration of action for a variable to have an effect, the estimated delay before the onset of action. In order to filter out erroneous data, they are able to set the maximum and minimum reasonable daily values for a variable.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@37e90ab7]
         
         :param: sharingData (body) Variable user settings data

         :returns: Promise<Response<Void>> 
         */
        func variableUserSettingsPost(#sharingData: [VariableUserSettings]) -> RequestBuilder<Void> {
            let path = "/variableUserSettings"
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = sharingData.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get variables by the category name
         
         - GET /variables
         - Get variables by the category name
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@7853e8ae, com.wordnik.swagger.codegen.CodegenSecurity@6b3392b4]
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@7853e8ae, com.wordnik.swagger.codegen.CodegenSecurity@6b3392b4]
         
         :param: userId (query) User id
         :param: categoryName (query) Category name

         :returns: Promise<Response<Void>> 
         */
        func variablesGet(#userId: Int?, categoryName: String?) -> RequestBuilder<Void> {
            let path = "/variables"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "userId": userId,
                "categoryName": categoryName
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Set variable
         
         - POST /variables
         - Allows the client to create a new variable in the `variables` table.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@3899dd0f]
         
         :param: variableName (body) Original name for the variable.

         :returns: Promise<Response<Void>> 
         */
        func variablesPost(#variableName: [Variable]) -> RequestBuilder<Void> {
            let path = "/variables"
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = variableName.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get variables by search query
         
         - GET /variables/search/{search}
         - Get variables containing the search characters for which the currently logged in user has measurements. Used to provide auto-complete function in variable search boxes.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@47dad419]
         
         :param: search (path) Search query which may be an entire variable name or a fragment of one.
         :param: categoryName (query) Filter variables by category name. The variable categories include Activity, Causes of Illness, Cognitive Performance, Conditions, Environment, Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique, Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work.
         :param: source (query) Specify a data source name to only return variables from a specific data source.
         :param: limit (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0.
         :param: offset (query) Now suppose you wanted to show results 11-20. You&#39;d set the offset to 10 and the limit to 10.

         :returns: Promise<Response<Void>> 
         */
        func variablesSearchSearchGet(#search: String, categoryName: String?, source: String?, limit: Int?, offset: Int?) -> RequestBuilder<Void> {
            var path = "/variables/search/{search}"
            path = path.stringByReplacingOccurrencesOfString("{search}", withString: "\(search)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "categoryName": categoryName,
                "source": source,
                "limit": limit,
                "offset": offset
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get info about a variable
         
         - GET /variables/{variableName}
         - Get all of the settings and information about a variable by its name. If the logged in user has modified the settings for the variable, these will be provided instead of the default settings for that variable.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@202b42d4]
         
         :param: variableName (path) Variable name

         :returns: Promise<Response<Void>> 
         */
        func variablesVariableNameGet(#variableName: String) -> RequestBuilder<Void> {
            var path = "/variables/{variableName}"
            path = path.stringByReplacingOccurrencesOfString("{variableName}", withString: "\(variableName)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
