//
// PairsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class PairsAPI: APIBase {
    
        /**
         
         Get pairs
         
         - GET /pairs
         - Pairs cause measurements with effect measurements grouped over the duration of action after the onset delay.
         - authMethods: [com.wordnik.swagger.codegen.CodegenSecurity@117343fa]
         
         :param: cause (query) Original variable name for the explanatory or independent variable
         :param: causeSource (query) Name of data source that the cause measurements should come from
         :param: causeUnit (query) Abbreviated name for the unit cause measurements to be returned in
         :param: delay (query) Delay before onset of action (in seconds) from the cause variable settings.
         :param: duration (query) Duration of action (in seconds) from the cause variable settings.
         :param: effect (query) Original variable name for the outcome or dependent variable
         :param: effectSource (query) Name of data source that the effectmeasurements should come from
         :param: effectUnit (query) Abbreviated name for the unit effect measurements to be returned in
         :param: endTime (query) The most recent date (in epoch time) for which we should return measurements
         :param: startTime (query) The earliest date (in epoch time) for which we should return measurements

         :returns: Promise<Response<Void>> 
         */
        func pairsGet(#cause: String, causeSource: String?, causeUnit: String?, delay: String?, duration: String?, effect: String, effectSource: String?, effectUnit: String?, endTime: String?, startTime: String?) -> RequestBuilder<Void> {
            let path = "/pairs"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "cause": cause,
                "causeSource": causeSource,
                "causeUnit": causeUnit,
                "delay": delay,
                "duration": duration,
                "effect": effect,
                "effectSource": effectSource,
                "effectUnit": effectUnit,
                "endTime": endTime,
                "startTime": startTime
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
    }
}
