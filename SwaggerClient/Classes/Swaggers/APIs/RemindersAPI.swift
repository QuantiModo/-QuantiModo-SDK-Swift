//
// RemindersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class RemindersAPI: APIBase {
    
        /**
         
         Get repeating tracking reminder settings
         
         - GET /v1/trackingReminders
         - Users can be reminded to track certain variables at a specified frequency with a default value.
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "reminderStartTime" : "aeiou",
    "thirdDailyReminderTime" : "aeiou",
    "firstDailyReminderTime" : "aeiou",
    "reminderEndTime" : "aeiou",
    "lastReminded" : "2016-01-27T19:24:17.169+0000",
    "variableName" : "aeiou",
    "secondDailyReminderTime" : "aeiou",
    "lastTracked" : "2016-01-27T19:24:17.169+0000",
    "popUp" : true,
    "sms" : true,
    "clientId" : "aeiou",
    "updatedAt" : "2016-01-27T19:24:17.169+0000",
    "startTrackingDate" : "2016-01-27T19:24:17.169+0000",
    "id" : 123,
    "combinationOperation" : "aeiou",
    "stopTrackingDate" : "2016-01-27T19:24:17.169+0000",
    "email" : true,
    "reminderFrequency" : 123,
    "userId" : 123,
    "notificationBar" : true,
    "reminderSound" : "aeiou",
    "abbreviatedUnitName" : "aeiou",
    "variableId" : 123,
    "defaultValue" : 1.3579000000000001069366817318950779736042022705078125,
    "variableCategoryName" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format. Time zone should be UTC and not local.
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format. Time zone should be UTC and not local.
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200> 
         */
        public class func v1TrackingRemindersGet(accessToken accessToken: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200> {
            let path = "/v1/trackingReminders"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store a Tracking Reminder
         
         - POST /v1/trackingReminders
         - This is to enable users to create reminders to track a variable with a default value at a specified frequency
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "reminderStartTime" : "aeiou",
    "thirdDailyReminderTime" : "aeiou",
    "firstDailyReminderTime" : "aeiou",
    "reminderEndTime" : "aeiou",
    "lastReminded" : "2016-01-27T19:24:17.190+0000",
    "variableName" : "aeiou",
    "secondDailyReminderTime" : "aeiou",
    "lastTracked" : "2016-01-27T19:24:17.190+0000",
    "popUp" : true,
    "sms" : true,
    "clientId" : "aeiou",
    "updatedAt" : "2016-01-27T19:24:17.190+0000",
    "startTrackingDate" : "2016-01-27T19:24:17.190+0000",
    "id" : 123,
    "combinationOperation" : "aeiou",
    "stopTrackingDate" : "2016-01-27T19:24:17.190+0000",
    "email" : true,
    "reminderFrequency" : 123,
    "userId" : 123,
    "notificationBar" : true,
    "reminderSound" : "aeiou",
    "abbreviatedUnitName" : "aeiou",
    "variableId" : 123,
    "defaultValue" : 1.3579000000000001069366817318950779736042022705078125,
    "variableCategoryName" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) TrackingReminder that should be stored

         - returns: RequestBuilder<Inline_response_200_1> 
         */
        public class func v1TrackingRemindersPost(accessToken accessToken: String?, body: TrackingReminder?) -> RequestBuilder<Inline_response_200_1> {
            let path = "/v1/trackingReminders"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_1>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete tracking reminder
         
         - POST /v1/trackingReminders/delete
         - Delete previously created tracking reminder
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Id of reminder to be deleted
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1TrackingRemindersDeletePost(body body: TrackingReminderDelete, accessToken: String?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/trackingReminders/delete"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get specific pending tracking reminders
         
         - GET /v1/trackingRemindersPending
         - Specfic pending reminder instances that still need to be tracked.
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "variableName" : "aeiou",
    "pendingReminderTime" : "2016-01-27T19:24:17.192+0000",
    "popUp" : true,
    "sms" : true,
    "clientId" : "aeiou",
    "updatedAt" : "2016-01-27T19:24:17.193+0000",
    "id" : 123,
    "combinationOperation" : "aeiou",
    "trackingReminderId" : 123,
    "email" : true,
    "userId" : 123,
    "notificationBar" : true,
    "reminderSound" : "aeiou",
    "abbreviatedUnitName" : "aeiou",
    "variableId" : 123,
    "defaultValue" : 1.3579000000000001069366817318950779736042022705078125,
    "variableCategoryName" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format. Time zone should be UTC and not local.
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format. Time zone should be UTC and not local.
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func v1TrackingRemindersPendingGet(accessToken accessToken: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_2> {
            let path = "/v1/trackingRemindersPending"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Skip a pending tracking reminder
         
         - POST /v1/trackingRemindersPending/skip
         - Deletes the pending tracking reminder
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Id of the pending reminder to be skipped or deleted
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1TrackingRemindersPendingSkipPost(body body: TrackingReminderPendingSkip, accessToken: String?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/trackingRemindersPending/skip"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Snooze a pending tracking reminder
         
         - POST /v1/trackingRemindersPending/snooze
         - Changes the reminder time to now plus one hour
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Id of the pending reminder to be snoozed
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1TrackingRemindersPendingSnoozePost(body body: TrackingReminderPendingSnooze, accessToken: String?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/trackingRemindersPending/snooze"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Track a pending tracking reminder
         
         - POST /v1/trackingRemindersPending/track
         - Adds the default measurement for the pending tracking reminder with the reminder time as the measurment start time
         - OAuth:
           - type: oauth2
           - name: oauth2
         - examples: [{example={
  "message" : "aeiou",
  "status" : "",
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Id of the pending reminder to be tracked
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<CommonResponse> 
         */
        public class func v1TrackingRemindersPendingTrackPost(body body: TrackingReminderPendingTrack, accessToken: String?) -> RequestBuilder<CommonResponse> {
            let path = "/v1/trackingRemindersPending/track"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
