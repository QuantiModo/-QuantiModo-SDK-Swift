//
// MeasurementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class MeasurementAPI: APIBase {
    
        /**
         
         Get all Measurements
         
         - GET /measurements
         - Get all Measurements
         - examples: [{example={
  "data" : [ {
    "error" : "aeiou",
    "location" : "aeiou",
    "source_id" : 123,
    "unit_id" : 123,
    "id" : "",
    "connector_id" : 123,
    "original_unit_id" : 123,
    "duration" : 123,
    "updated_at" : "2015-11-05T03:17:19.746+0000",
    "value" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.746+0000",
    "start_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "user_id" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "original_value" : 1.3579000000000001069366817318950779736042022705078125,
    "note" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter userId: (query) user_id
         - parameter clientId: (query) client_id
         - parameter connectorId: (query) connector_id
         - parameter variableId: (query) variable_id
         - parameter startTime: (query) start_time
         - parameter value: (query) value
         - parameter originalValue: (query) original_value
         - parameter duration: (query) duration
         - parameter note: (query) note
         - parameter latitude: (query) latitude
         - parameter longitude: (query) longitude
         - parameter location: (query) location
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter error: (query) error
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_11> 
         */
        public class func measurementsGet(userId userId: Int?, clientId: String?, connectorId: Int?, variableId: Int?, startTime: Int?, value: Double?, originalValue: Double?, duration: Int?, note: String?, latitude: Double?, longitude: Double?, location: String?, createdAt: String?, updatedAt: String?, error: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_11> {
            let path = "/measurements"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "userId": userId,
                "clientId": clientId,
                "connectorId": connectorId,
                "variableId": variableId,
                "startTime": startTime,
                "value": value,
                "originalValue": originalValue,
                "duration": duration,
                "note": note,
                "latitude": latitude,
                "longitude": longitude,
                "location": location,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "error": error,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_11>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Measurement
         
         - POST /measurements
         - Store Measurement
         - examples: [{example={
  "data" : [ {
    "error" : "aeiou",
    "location" : "aeiou",
    "source_id" : 123,
    "unit_id" : 123,
    "id" : "",
    "connector_id" : 123,
    "original_unit_id" : 123,
    "duration" : 123,
    "updated_at" : "2015-11-05T03:17:19.753+0000",
    "value" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.753+0000",
    "start_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "user_id" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "original_value" : 1.3579000000000001069366817318950779736042022705078125,
    "note" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Measurement that should be stored

         - returns: RequestBuilder<Inline_response_200_11> 
         */
        public class func measurementsPost(body body: MeasurementPost?) -> RequestBuilder<Inline_response_200_11> {
            let path = "/measurements"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_11>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Measurements CSV
         
         - GET /measurements/csv
         - Download a CSV containing all user measurements
         - examples: [{output=none}]

         - returns: RequestBuilder<NSURL> 
         */
        public class func measurementsCsvGet() -> RequestBuilder<NSURL> {
            let path = "/measurements/csv"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<NSURL>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Post Request for Measurements CSV
         
         - POST /measurements/request_csv
         - Use this endpoint to schedule a CSV export containing all user measurements to be emailed to the user within 24 hours.
         - examples: [{example="", contentType=application/json}]

         - returns: RequestBuilder<Int> 
         */
        public class func measurementsRequestCsvPost() -> RequestBuilder<Int> {
            let path = "/measurements/request_csv"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Int>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Measurement
         
         - GET /measurements/{id}
         - Get Measurement
         - examples: [{example={
  "data" : {
    "error" : "aeiou",
    "location" : "aeiou",
    "source_id" : 123,
    "unit_id" : 123,
    "id" : "",
    "connector_id" : 123,
    "original_unit_id" : 123,
    "duration" : 123,
    "updated_at" : "2015-11-05T03:17:19.760+0000",
    "value" : 1.3579000000000001069366817318950779736042022705078125,
    "created_at" : "2015-11-05T03:17:19.760+0000",
    "start_time" : 123,
    "longitude" : 1.3579000000000001069366817318950779736042022705078125,
    "user_id" : 123,
    "latitude" : 1.3579000000000001069366817318950779736042022705078125,
    "client_id" : "aeiou",
    "variable_id" : 123,
    "original_value" : 1.3579000000000001069366817318950779736042022705078125,
    "note" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Measurement

         - returns: RequestBuilder<Inline_response_200_12> 
         */
        public class func measurementsIdGet(id id: Int) -> RequestBuilder<Inline_response_200_12> {
            var path = "/measurements/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_12>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Measurement
         
         - PUT /measurements/{id}
         - Update Measurement
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Measurement
         - parameter body: (body) Measurement that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func measurementsIdPut(id id: Int, body: Measurement?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/measurements/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Measurement
         
         - DELETE /measurements/{id}
         - Delete Measurement
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Measurement

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func measurementsIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/measurements/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
