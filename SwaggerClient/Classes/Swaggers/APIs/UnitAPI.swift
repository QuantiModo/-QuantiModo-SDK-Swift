//
// UnitAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UnitAPI: APIBase {
    
        /**
         
         Get all Units
         
         - GET /units
         - Get all Units
         - examples: [{example={
  "data" : [ {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2015-11-05T03:17:19.809+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.809+0000",
    "client_id" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter clientId: (query) client_id
         - parameter name: (query) name
         - parameter abbreviatedName: (query) abbreviated_name
         - parameter categoryId: (query) category_id
         - parameter minimumValue: (query) minimum_value
         - parameter maximumValue: (query) maximum_value
         - parameter updated: (query) updated
         - parameter multiply: (query) multiply
         - parameter add: (query) add
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_17> 
         */
        public class func unitsGet(clientId clientId: String?, name: String?, abbreviatedName: String?, categoryId: Bool?, minimumValue: Double?, maximumValue: Double?, updated: Int?, multiply: Double?, add: Double?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_17> {
            let path = "/units"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "clientId": clientId,
                "name": name,
                "abbreviatedName": abbreviatedName,
                "categoryId": categoryId,
                "minimumValue": minimumValue,
                "maximumValue": maximumValue,
                "updated": updated,
                "multiply": multiply,
                "add": add,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_17>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Unit
         
         - POST /units
         - Store Unit
         - examples: [{example={
  "data" : {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2015-11-05T03:17:19.817+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.817+0000",
    "client_id" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Unit that should be stored

         - returns: RequestBuilder<Inline_response_200_18> 
         */
        public class func unitsPost(body body: Unit?) -> RequestBuilder<Inline_response_200_18> {
            let path = "/units"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_18>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Unit
         
         - GET /units/{id}
         - Get Unit
         - examples: [{example={
  "data" : {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2015-11-05T03:17:19.819+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2015-11-05T03:17:19.819+0000",
    "client_id" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit

         - returns: RequestBuilder<Inline_response_200_18> 
         */
        public class func unitsIdGet(id id: Int) -> RequestBuilder<Inline_response_200_18> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_18>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Unit
         
         - PUT /units/{id}
         - Update Unit
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit
         - parameter body: (body) Unit that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitsIdPut(id id: Int, body: Unit?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Unit
         
         - DELETE /units/{id}
         - Delete Unit
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitsIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
