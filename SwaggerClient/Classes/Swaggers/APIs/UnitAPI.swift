//
// UnitAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UnitAPI: APIBase {
    
        /**
         
         Get all available units
         
         - GET /units
         - Get all available units
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : [ {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.483+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.483+0000",
    "client_id" : "aeiou"
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter clientId: (query) The ID of the client application which last created or updated this unit
         - parameter name: (query) Unit name
         - parameter abbreviatedName: (query) Unit abbreviation
         - parameter categoryId: (query) Unit category ID
         - parameter minimumValue: (query) Minimum value permitted for this unit
         - parameter maximumValue: (query) Maximum value permitted for this unit
         - parameter updated: (query) updated
         - parameter defaultUnitId: (query) ID of default unit for this units category
         - parameter multiply: (query) Value multiplied to convert to default unit in this unit category
         - parameter add: (query) Value which should be added to convert to default unit
         - parameter createdAt: (query) When the record was first created. Use ISO 8601 datetime format
         - parameter updatedAt: (query) When the record was last updated. Use ISO 8601 datetime format
         - parameter limit: (query) The LIMIT is used to limit the number of results returned. So if you have 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records.
         - parameter offset: (query) OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause. If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.
         - parameter sort: (query) Sort by given field. If the field is prefixed with &#39;-&#39;, it will sort in descending order.

         - returns: RequestBuilder<Inline_response_200_26> 
         */
        public class func unitsGet(accessToken accessToken: String?, clientId: String?, name: String?, abbreviatedName: String?, categoryId: Int?, minimumValue: Double?, maximumValue: Double?, updated: Int?, defaultUnitId: Int?, multiply: Double?, add: Double?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_26> {
            let path = "/units"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken,
                "clientId": clientId,
                "name": name,
                "abbreviatedName": abbreviatedName,
                "categoryId": categoryId,
                "minimumValue": minimumValue,
                "maximumValue": maximumValue,
                "updated": updated,
                "defaultUnitId": defaultUnitId,
                "multiply": multiply,
                "add": add,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_26>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Unit
         
         - POST /units
         - Store Unit
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.490+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.490+0000",
    "client_id" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) Unit that should be stored

         - returns: RequestBuilder<Inline_response_200_27> 
         */
        public class func unitsPost(accessToken accessToken: String?, body: Unit?) -> RequestBuilder<Inline_response_200_27> {
            let path = "/units"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_27>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get Unit
         
         - GET /units/{id}
         - Get Unit
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : {
    "minimum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "default_unit_id" : 123,
    "category_id" : "",
    "multiply" : 1.3579000000000001069366817318950779736042022705078125,
    "maximum_value" : 1.3579000000000001069366817318950779736042022705078125,
    "add" : 1.3579000000000001069366817318950779736042022705078125,
    "id" : 123,
    "updated_at" : "2016-02-09T02:17:55.492+0000",
    "updated" : 123,
    "abbreviated_name" : "aeiou",
    "name" : "aeiou",
    "created_at" : "2016-02-09T02:17:55.492+0000",
    "client_id" : "aeiou"
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_27> 
         */
        public class func unitsIdGet(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_27> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_27>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update Unit
         
         - PUT /units/{id}
         - Update Unit
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit
         - parameter accessToken: (query) User&#39;s OAuth2 access token
         - parameter body: (body) Unit that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitsIdPut(id id: Int, accessToken: String?, body: Unit?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Delete Unit
         
         - DELETE /units/{id}
         - Delete Unit
         - OAuth:
           - type: oauth2
           - name: quantimodo_oauth2
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Unit
         - parameter accessToken: (query) User&#39;s OAuth2 access token

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func unitsIdDelete(id id: Int, accessToken: String?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/units/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "accessToken": accessToken
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
