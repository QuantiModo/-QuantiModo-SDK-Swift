//
// UpdateAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class UpdateAPI: APIBase {
    
        /**
         
         Get all Updates
         
         - GET /updates
         - Get all Updates
         - examples: [{example={
  "data" : [ {
    "message" : "aeiou",
    "id" : 123,
    "number_of_measurements" : 123,
    "connector_id" : 123,
    "updated_at" : "2015-11-03T22:25:27.413+0000",
    "created_at" : "2015-11-03T22:25:27.413+0000",
    "user_id" : 123,
    "success" : true
  } ],
  "success" : true
}, contentType=application/json}]
         
         - parameter userId: (query) user_id
         - parameter connectorId: (query) connector_id
         - parameter numberOfMeasurements: (query) number_of_measurements
         - parameter success: (query) success
         - parameter message: (query) message
         - parameter createdAt: (query) created_at
         - parameter updatedAt: (query) updated_at
         - parameter limit: (query) limit
         - parameter offset: (query) offset
         - parameter sort: (query) sort

         - returns: RequestBuilder<Inline_response_200_19> 
         */
        public class func updatesGet(userId userId: Int?, connectorId: Int?, numberOfMeasurements: Int?, success: Bool?, message: String?, createdAt: String?, updatedAt: String?, limit: Int?, offset: Int?, sort: String?) -> RequestBuilder<Inline_response_200_19> {
            let path = "/updates"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "userId": userId,
                "connectorId": connectorId,
                "numberOfMeasurements": numberOfMeasurements,
                "success": success,
                "message": message,
                "createdAt": createdAt,
                "updatedAt": updatedAt,
                "limit": limit,
                "offset": offset,
                "sort": sort
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_19>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Store Update
         
         - POST /updates
         - Store Update
         - examples: [{example={
  "data" : {
    "message" : "aeiou",
    "id" : 123,
    "number_of_measurements" : 123,
    "connector_id" : 123,
    "updated_at" : "2015-11-03T22:25:27.418+0000",
    "created_at" : "2015-11-03T22:25:27.418+0000",
    "user_id" : 123,
    "success" : true
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter body: (body) Update that should be stored

         - returns: RequestBuilder<Inline_response_200_20> 
         */
        public class func updatesPost(body body: Update?) -> RequestBuilder<Inline_response_200_20> {
            let path = "/updates"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_20>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get Update
         
         - GET /updates/{id}
         - Get Update
         - examples: [{example={
  "data" : {
    "message" : "aeiou",
    "id" : 123,
    "number_of_measurements" : 123,
    "connector_id" : 123,
    "updated_at" : "2015-11-03T22:25:27.430+0000",
    "created_at" : "2015-11-03T22:25:27.430+0000",
    "user_id" : 123,
    "success" : true
  },
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Update

         - returns: RequestBuilder<Inline_response_200_20> 
         */
        public class func updatesIdGet(id id: Int) -> RequestBuilder<Inline_response_200_20> {
            var path = "/updates/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_20>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Update Update
         
         - PUT /updates/{id}
         - Update Update
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Update
         - parameter body: (body) Update that should be updated

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func updatesIdPut(id id: Int, body: Update?) -> RequestBuilder<Inline_response_200_2> {
            var path = "/updates/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete Update
         
         - DELETE /updates/{id}
         - Delete Update
         - examples: [{example={
  "data" : "aeiou",
  "success" : true
}, contentType=application/json}]
         
         - parameter id: (path) id of Update

         - returns: RequestBuilder<Inline_response_200_2> 
         */
        public class func updatesIdDelete(id id: Int) -> RequestBuilder<Inline_response_200_2> {
            var path = "/updates/{id}"
            path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Inline_response_200_2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
